<!-- Inner Circle Access Page Section -->
<!-- SECTION LOADING TEST - SHOULD ALWAYS BE VISIBLE -->
<div style="position: fixed; top: 0; left: 0; width: 100%; background: red; color: white; text-align: center; padding: 10px; z-index: 99999; font-size: 20px;">
  SECTION LOADED - MODE: {{ section.settings.display_mode }}
</div>

{% if section.settings.display_mode == 'full_page' %}
  <!-- Full Page Content Display -->
  <div class="inner-circle-full-page">
    <!-- Page Content -->
    {% if page.content != blank %}
      <div class="page-content">
        {{ page.content }}
      </div>
    {% endif %}
    
    <!-- Inner Circle Exclusive Content -->
    <div class="exclusive-content-section">
      <div class="inner-circle-content">
        <h2>Welcome to The Inner Circle</h2>
        <p>You are now part of our most exclusive membership tier. Enjoy unlimited access to our premium collection, early releases, and member-only benefits.</p>
        
        <div class="member-benefits">
          <div class="benefit-item">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
            </svg>
            <span>Unlimited access to exclusive products</span>
          </div>
          <div class="benefit-item">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="12" r="10"/>
              <polyline points="12,6 12,12 16,14"/>
            </svg>
            <span>48-hour early access to new releases</span>
          </div>
          <div class="benefit-item">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"/>
              <circle cx="9" cy="7" r="4"/>
              <path d="M22 21v-2a4 4 0 0 0-3-3.87"/>
              <path d="M16 3.13a4 4 0 0 1 0 7.75"/>
            </svg>
            <span>Dedicated Inner Circle support</span>
          </div>
          <div class="benefit-item">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <line x1="12" y1="1" x2="12" y2="23"/>
              <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
            </svg>
            <span>Exclusive member pricing & discounts</span>
          </div>
        </div>
        
        <!-- Inner Circle Collection -->
        {% if section.settings.exclusive_collection != blank %}
          {% assign exclusive_collection = collections[section.settings.exclusive_collection] %}
        {% else %}
          {% assign exclusive_collection = collections['inner-circle'] %}
        {% endif %}
        
        {% if exclusive_collection and exclusive_collection.products.size > 0 %}
          <div class="exclusive-products-section">
            <h3>
              {% if section.settings.collection_title != blank %}
                {{ section.settings.collection_title }}
              {% else %}
                Your Exclusive Collection
              {% endif %}
            </h3>
            <div class="products-grid">
              {% assign products_limit = section.settings.products_display_count | default: 8 %}
              {% for product in exclusive_collection.products limit: products_limit %}
                <div class="product-card">
                  <a href="{{ product.url }}">
                    {% if product.featured_image %}
                      <img src="{{ product.featured_image | image_url: width: 300 }}" alt="{{ product.title }}">
                    {% endif %}
                    <h4>{{ product.title }}</h4>
                    <span class="price">{{ product.price | money }}</span>
                  </a>
                </div>
              {% endfor %}
            </div>
            {% if exclusive_collection.products.size > products_limit %}
              <a href="{{ exclusive_collection.url }}" class="view-all-products">
                {% if section.settings.view_all_text != blank %}
                  {{ section.settings.view_all_text }}
                {% else %}
                  View All Inner Circle Items
                {% endif %}
              </a>
            {% endif %}
          </div>
        {% endif %}
      </div>
    </div>
  </div>
{% else %}
  <!-- Original Access Gate Display -->
  <div class="limited-access-page full-width">
    <!-- Atmospheric Background -->
    <div class="limited-access-atmosphere">
      <div class="atmosphere-texture"></div>
      <div class="atmosphere-gradient"></div>
      <div class="restricted-particles">
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
      </div>
    </div>

    <div class="limited-access-container">
    <!-- Access Gate Header -->
    <div class="access-gate-header">
      <!-- Lock Icon -->
      <div class="lock-icon">
        <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
          <rect x="3" y="11" width="18" height="11" rx="2" ry="2"/>
          <circle cx="12" cy="16" r="1"/>
          <path d="M7 11V7a5 5 0 0 1 10 0v4"/>
        </svg>
      </div>
      
      <!-- Access Title -->
      <h1 class="access-title">The Inner Circle</h1>
      
      <!-- Access Subtitle -->
      <div class="access-subtitle">Advanced Access</div>
      
      <!-- Access Message -->
      <div class="access-message">
        <p>This content is restricted to Inner Circle members only. Please verify your access credentials below.</p>
      </div>
    </div>

    <!-- Access Methods -->
    <div class="access-methods">
      <!-- Password Access -->
      <div class="access-method password-access">
        <div class="method-header">
          <div class="method-icon">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M9 12l2 2 4-4"/>
              <path d="M21 12c-1 0-3-1-3-3s2-3 3-3 3 1 3 3-2 3-3 3"/>
              <path d="M3 12c1 0 3-1-3-3s-2-3-3-3-3 1-3 3 2 3 3 3"/>
              <path d="M13 12c0-1.5 0-3 0-3s-1-2-3-2-3 2-3 2v3"/>
            </svg>
          </div>
          <h3 class="method-title">Inner Circle Access Code</h3>
          <p class="method-description">Enter your exclusive Inner Circle access code</p>
        </div>
        
        <!-- Password Entry Form -->
        <div id="password-entry" class="password-entry">
          <form class="password-form">
            <div class="input-group">
              <input 
                type="password" 
                id="access-password"
                placeholder="Enter Inner Circle access code"
                class="access-input"
                required
              >
              <button type="submit" class="access-submit">
                <span>Verify</span>
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M5 12h14M12 5l7 7-7 7"/>
                </svg>
              </button>
            </div>
            <div id="password-error" class="password-error" style="display: none;">
              <p>Incorrect access code. Please try again.</p>
            </div>
          </form>
        </div>
        
        <!-- Access Granted Message -->
        <div id="access-granted-message" class="access-granted-message" style="display: none;">
          <div class="method-header">
            <div class="method-icon verified">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"/>
                <polyline points="22,4 12,14.01 9,11.01"/>
              </svg>
            </div>
            <h3 class="method-title">Welcome to The Inner Circle!</h3>
            <p class="method-description">Loading exclusive content...</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Additional Information -->
    <div class="access-footer">
      <p class="footer-message">The Inner Circle is our most exclusive membership tier. For assistance with access or membership inquiries, please contact our VIP support team.</p>
      
      <div class="help-links">
        <a href="{{ routes.root_url }}" class="back-link">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M19 12H5M12 19l-7-7 7-7"/>
          </svg>
          Back to Store
        </a>
        
        <a href="/pages/contact" class="contact-link">
          VIP Support
        </a>
      </div>
    </div>
    </div>
    
    <!-- Full Page Content Area (shown when access is granted) -->
    <div id="full-page-content" class="full-page-exclusive-content" style="display: none;">
      <h1 style="color: red; font-size: 48px; text-align: center; background: yellow; padding: 20px; margin: 0;">FULL PAGE CONTENT IS WORKING</h1>
      <div style="background: blue; color: white; padding: 40px; text-align: center; font-size: 24px;">
        If you can see this, the content is displaying correctly.
        <br><br>
        <button onclick="
          sessionStorage.clear(); 
          window.location.reload();
        " style="background: red; color: white; padding: 15px 30px; font-size: 18px; border: none; border-radius: 5px; cursor: pointer;">
          RESET ACCESS & RELOAD PAGE
        </button>
      </div>
      
      <div class="page-content">
        {% if page.content != blank %}
          {{ page.content }}
        {% endif %}
      </div>
      
      <div class="exclusive-content-section">
        <!-- PROMINENT DEBUG INFO - SHOULD BE VISIBLE -->
        <div style="background: red; color: white; padding: 2rem; margin: 2rem 0; border: 5px solid yellow; border-radius: 8px; position: relative; z-index: 9999;">
          <h2 style="color: white; margin: 0 0 1rem 0;">🔍 DEBUG: Collection Status</h2>
          <p style="color: white; font-size: 18px; margin: 0.5rem 0;">Collection Setting: {{ section.settings.exclusive_collection }}</p>
          {% if section.settings.exclusive_collection != blank %}
            {% assign test_collection = collections[section.settings.exclusive_collection] %}
            {% if test_collection %}
              <p style="color: lime; font-size: 18px;">✅ Collection Found: {{ test_collection.title }}</p>
              <p style="color: white; font-size: 18px;">📦 Products: {{ test_collection.products.size }}</p>
            {% else %}
              <p style="color: orange; font-size: 18px;">❌ Collection NOT Found</p>
            {% endif %}
          {% else %}
            <p style="color: orange; font-size: 18px;">⚠️ No collection configured</p>
          {% endif %}
        </div>

        <div class="inner-circle-content">
          <h2>Welcome to The Inner Circle</h2>
          <p>You are now part of our most exclusive membership tier. Enjoy unlimited access to our premium collection, early releases, and member-only benefits.</p>
          
          <div class="member-benefits">
            <div class="benefit-item">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
              </svg>
              <span>Unlimited access to exclusive products</span>
            </div>
            <div class="benefit-item">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"/>
                <polyline points="12,6 12,12 16,14"/>
              </svg>
              <span>48-hour early access to new releases</span>
            </div>
            <div class="benefit-item">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"/>
                <circle cx="9" cy="7" r="4"/>
                <path d="M22 21v-2a4 4 0 0 0-3-3.87"/>
                <path d="M16 3.13a4 4 0 0 1 0 7.75"/>
              </svg>
              <span>Dedicated Inner Circle support</span>
            </div>
            <div class="benefit-item">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="12" y1="1" x2="12" y2="23"/>
                <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
              </svg>
              <span>Exclusive member pricing & discounts</span>
            </div>
          </div>
          
          <!-- Inner Circle Collection -->
          <!-- Debug: Collection Settings -->
          <div style="background: #333; color: #fff; padding: 1rem; margin: 1rem 0; border-radius: 8px;">
            <h4>Debug: Collection Info</h4>
            <p>Exclusive Collection Setting: {{ section.settings.exclusive_collection }}</p>
            
            {% comment %} Try multiple possible collection handles {% endcomment %}
            {% assign exclusive_collection = null %}
            {% if section.settings.exclusive_collection != blank %}
              {% assign exclusive_collection = collections[section.settings.exclusive_collection] %}
              <p>Trying: {{ section.settings.exclusive_collection }} - {{ exclusive_collection.title | default: 'Not found' }}</p>
              
              {% if exclusive_collection == null or exclusive_collection.products.size == 0 %}
                {% comment %} Try variations for Saints vs Sinners - Athletes {% endcomment %}
                {% assign test_handles = 'saints-vs-sinners-athletes,saints-vs-sinners,saints-sinners-athletes,saints-sinners,athletes' | split: ',' %}
                {% for handle in test_handles %}
                  {% assign test_collection = collections[handle] %}
                  {% if test_collection and test_collection.products.size > 0 %}
                    <p>Found alternative: {{ handle }} - {{ test_collection.title }} ({{ test_collection.products.size }} products)</p>
                    {% assign exclusive_collection = test_collection %}
                    {% break %}
                  {% endif %}
                {% endfor %}
              {% endif %}
            {% else %}
              {% assign exclusive_collection = collections['inner-circle'] %}
              <p>Using fallback 'inner-circle' collection</p>
            {% endif %}
            
            {% if exclusive_collection %}
              <p><strong>Using Collection:</strong> {{ exclusive_collection.title }} ({{ exclusive_collection.handle }})</p>
              <p><strong>Products Count:</strong> {{ exclusive_collection.products.size }}</p>
            {% else %}
              <p><strong>No suitable collection found</strong></p>
            {% endif %}
            
            <h5>Available Collections (looking for Saints vs Sinners):</h5>
            <ul>
              {% for collection in collections %}
                {% assign lower_title = collection.title | downcase %}
                {% if lower_title contains 'saints' or lower_title contains 'sinners' or lower_title contains 'athlete' %}
                  <li style="color: #ffff00;"><strong>{{ collection.handle }} - {{ collection.title }} ({{ collection.products.size }} products)</strong></li>
                {% else %}
                  <li>{{ collection.handle }} - {{ collection.title }} ({{ collection.products.size }} products)</li>
                {% endif %}
              {% endfor %}
            </ul>
          </div>
          
          <!-- DEBUG: Check collection before display -->
          <div style="background: orange; color: black; padding: 1rem; margin: 1rem 0; border: 3px solid purple;">
            <h4>🔧 PRODUCTS DISPLAY DEBUG</h4>
            <p>exclusive_collection variable: {{ exclusive_collection.title | default: 'NULL/UNDEFINED' }}</p>
            <p>products.size: {{ exclusive_collection.products.size | default: 'NULL' }}</p>
            <p>Condition check: exclusive_collection exists = {% if exclusive_collection %}true{% else %}false{% endif %}, products > 0 = {% if exclusive_collection.products.size > 0 %}true{% else %}false{% endif %}</p>
            <p>products_limit setting: {{ section.settings.products_display_count | default: 12 }}</p>
          </div>
          
          {% if exclusive_collection and exclusive_collection.products.size > 0 %}
            <div style="background: green; color: white; padding: 1rem; margin: 1rem 0;">
              <h4>✅ ENTERING PRODUCTS SECTION</h4>
            </div>
            <div class="exclusive-products-section">
              <h3>
                {% if section.settings.collection_title != blank %}
                  {{ section.settings.collection_title }}
                {% else %}
                  Your Exclusive Collection
                {% endif %}
              </h3>
              <div class="products-grid">
                {% assign products_limit = section.settings.products_display_count | default: 12 %}
                <div style="background: yellow; color: black; padding: 1rem; margin: 1rem 0;">
                  <h5>🔄 STARTING PRODUCT LOOP</h5>
                  <p>Loop limit: {{ products_limit }}</p>
                  <p>Total products available: {{ exclusive_collection.products.size }}</p>
                </div>
                {% for product in exclusive_collection.products limit: products_limit %}
                  <div style="background: lime; color: black; padding: 0.5rem; margin: 0.5rem;">
                    <strong>Product {{ forloop.index }}: {{ product.title }}</strong>
                  </div>
                  <div class="product-card">
                    <a href="{{ product.url }}">
                      {% if product.featured_image %}
                        <img src="{{ product.featured_image | image_url: width: 300 }}" alt="{{ product.title }}">
                      {% endif %}
                      <h4>{{ product.title }}</h4>
                      <span class="price">{{ product.price | money }}</span>
                    </a>
                  </div>
                {% endfor %}
              </div>
              {% if exclusive_collection.products.size > products_limit %}
                <a href="{{ exclusive_collection.url }}" class="view-all-products">
                  {% if section.settings.view_all_text != blank %}
                    {{ section.settings.view_all_text }}
                  {% else %}
                    View All Inner Circle Items
                  {% endif %}
                </a>
              {% endif %}
            </div>
          {% else %}
            <div style="background: #444; color: #fff; padding: 1rem; margin: 1rem 0; border-radius: 8px;">
              <h4>No Products Found</h4>
              {% if exclusive_collection %}
                <p>Collection "{{ exclusive_collection.title }}" exists but has no products.</p>
              {% else %}
                <p>Collection "{{ section.settings.exclusive_collection }}" was not found.</p>
              {% endif %}
            </div>
          {% endif %}
        </div>
        
        <div class="session-controls">
          <div class="session-info">
            <p>Session expires in <span id="session-timer">30:00</span></p>
            <button id="reset-access" class="reset-btn">Reset Access</button>
          </div>
        </div>
      </div>
    </div>
  </div>
{% endif %}

{% stylesheet %}
  /* Full Page Exclusive Content Styles */
  .full-page-exclusive-content {
    width: 100%;
    min-height: 100vh;
    background-color: var(--color-background);
    padding: 2rem 0;
  }
  
  .full-page-exclusive-content .page-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    margin-bottom: 3rem;
  }
  
  .full-page-exclusive-content .exclusive-content-section {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }
  
  .session-controls {
    position: sticky;
    top: 2rem;
    float: right;
    background: var(--color-background-ui);
    padding: 1rem;
    border-radius: 8px;
    border: 2px solid rgba(215, 38, 56, 0.1);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    margin-bottom: 2rem;
  }
  
  @media (max-width: 768px) {
    .session-controls {
      position: static;
      float: none;
      width: auto;
      padding: 0.75rem;
      margin: 0 0 2rem 0;
    }
  }
  
  .session-controls .session-info {
    margin: 0;
    text-align: center;
  }
  
  .session-controls .session-info p {
    font-family: 'Oswald', sans-serif;
    font-size: 0.8rem;
    font-weight: 400;
    color: var(--color-foreground);
    opacity: 0.7;
    margin-bottom: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .session-controls #session-timer {
    color: rgba(215, 38, 56, 0.8);
    font-weight: 500;
  }
  
  .session-controls .reset-btn {
    padding: 0.5rem 1rem;
    background: transparent;
    color: var(--color-foreground);
    font-family: 'Oswald', sans-serif;
    font-size: 0.75rem;
    font-weight: 400;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    border: 1px solid rgba(156, 163, 175, 0.3);
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.3s ease;
    opacity: 0.7;
    width: 100%;
  }
  
  .session-controls .reset-btn:hover {
    opacity: 1;
    border-color: rgba(215, 38, 56, 0.3);
    color: rgba(215, 38, 56, 0.8);
  }

  /* Full Page Display Styles */
  .inner-circle-full-page {
    width: 100%;
    padding: 2rem 0;
  }
  
  .page-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
    margin-bottom: 3rem;
  }
  
  .exclusive-content-section {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }
  
  .inner-circle-content h2 {
    font-family: 'Oswald', sans-serif;
    font-size: 2rem;
    font-weight: 600;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 1rem;
    text-align: center;
  }
  
  .inner-circle-content > p {
    font-family: 'Oswald', sans-serif;
    font-size: 1.1rem;
    font-weight: 300;
    color: var(--color-foreground);
    opacity: 0.8;
    line-height: 1.6;
    margin-bottom: 3rem;
    text-align: center;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }
  
  .member-benefits {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    margin-bottom: 4rem;
    padding: 2rem;
    background: linear-gradient(135deg, 
      rgba(215, 38, 56, 0.05) 0%, 
      rgba(160, 27, 42, 0.08) 100%);
    border-radius: 12px;
    border: 1px solid rgba(215, 38, 56, 0.1);
  }
  
  .benefit-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    font-family: 'Oswald', sans-serif;
    font-size: 1rem;
    font-weight: 400;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .benefit-item svg {
    color: rgba(215, 38, 56, 0.7);
    flex-shrink: 0;
  }
  
  .exclusive-products-section {
    margin-top: 3rem;
  }
  
  .exclusive-products-section h3 {
    font-family: 'Oswald', sans-serif;
    font-size: 1.5rem;
    font-weight: 500;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 2rem;
    text-align: center;
  }
  
  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 2rem;
    margin-bottom: 2rem;
  }
  
  @media (max-width: 768px) {
    .products-grid {
      grid-template-columns: 1fr !important;
      gap: 1rem !important;
      max-width: 400px !important;
      margin: 0 auto 2rem !important;
    }
    
    .product-card {
      padding: 1rem;
      min-height: 350px;
    }
    
    .product-card h4 {
      font-size: 1rem;
    }
  }
  
  .product-card {
    background-color: var(--color-background-ui);
    border-radius: 12px;
    padding: 1.5rem;
    border: 1px solid rgba(215, 38, 56, 0.1);
    transition: all 0.3s ease;
    text-align: center;
  }
  
  .product-card:hover {
    border-color: rgba(215, 38, 56, 0.2);
    transform: translateY(-4px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }
  
  .product-card a {
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .product-card img {
    width: 100%;
    aspect-ratio: 4 / 3;
    object-fit: cover;
    border-radius: 8px;
  }
  
  .product-card h4 {
    font-family: 'Oswald', sans-serif;
    font-size: 1.1rem;
    font-weight: 500;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.02em;
    line-height: 1.3;
    margin: 0;
  }
  
  .product-card .price {
    font-family: 'Oswald', sans-serif;
    font-size: 1.2rem;
    font-weight: 600;
    color: rgba(215, 38, 56, 0.8);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .view-all-products {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 1rem 2rem;
    background: linear-gradient(135deg, 
      rgba(215, 38, 56, 0.8) 0%, 
      rgba(160, 27, 42, 0.9) 100%);
    color: var(--color-foreground);
    font-family: 'Oswald', sans-serif;
    font-size: 1rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    text-decoration: none;
    border-radius: 8px;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(215, 38, 56, 0.2);
    margin: 2rem auto 0;
    display: block;
    width: fit-content;
  }
  
  .view-all-products:hover {
    background: linear-gradient(135deg, 
      rgba(215, 38, 56, 0.9) 0%, 
      rgba(160, 27, 42, 1) 100%);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(215, 38, 56, 0.3);
  }

  /* Inner Circle Access Page Styles */
  .limited-access-page {
    position: relative;
    min-height: 100vh;
    background-color: var(--color-background);
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem 0;
  }
  
  /* Atmospheric Background */
  .limited-access-atmosphere {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
  }
  
  .atmosphere-texture {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      radial-gradient(circle at 20% 20%, rgba(215, 38, 56, 0.03) 1px, transparent 1px),
      radial-gradient(circle at 80% 80%, rgba(215, 38, 56, 0.02) 1px, transparent 1px),
      radial-gradient(circle at 40% 60%, rgba(215, 38, 56, 0.015) 0.5px, transparent 0.5px);
    background-size: 40px 40px, 60px 60px, 80px 80px;
    animation: restrictedShift 100s linear infinite;
    opacity: 0.6;
  }
  
  .atmosphere-gradient {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(ellipse at center, 
      rgba(215, 38, 56, 0.015) 0%, 
      rgba(215, 38, 56, 0.008) 40%, 
      transparent 70%);
  }
  
  .restricted-particles {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  .restricted-particles .particle {
    position: absolute;
    width: 3px;
    height: 3px;
    background: rgba(215, 38, 56, 0.3);
    border-radius: 50%;
    animation: float 8s infinite ease-in-out;
  }
  
  .restricted-particles .particle:nth-child(1) {
    top: 20%;
    left: 20%;
    animation-delay: 0s;
  }
  
  .restricted-particles .particle:nth-child(2) {
    top: 60%;
    left: 80%;
    animation-delay: 2s;
  }
  
  .restricted-particles .particle:nth-child(3) {
    top: 80%;
    left: 30%;
    animation-delay: 4s;
  }
  
  .restricted-particles .particle:nth-child(4) {
    top: 30%;
    left: 70%;
    animation-delay: 6s;
  }
  
  .restricted-particles .particle:nth-child(5) {
    top: 70%;
    left: 60%;
    animation-delay: 1s;
  }
  
  /* Container */
  .limited-access-container {
    position: relative;
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
    padding: 0 2rem;
    z-index: 2;
  }
  
  /* Access Gate Header */
  .access-gate-header {
    text-align: center;
    margin-bottom: 3rem;
    padding: 2rem;
    background-color: var(--color-background-ui);
    border-radius: 16px;
    border: 2px solid rgba(215, 38, 56, 0.1);
    box-shadow: 
      0 12px 40px rgba(0, 0, 0, 0.2),
      inset 0 1px 0 rgba(215, 38, 56, 0.03);
  }
  
  .lock-icon {
    margin-bottom: 1.5rem;
    color: rgba(215, 38, 56, 0.7);
    animation: lockPulse 3s infinite ease-in-out;
  }
  
  .access-title {
    font-family: 'Oswald', sans-serif;
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 600;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    margin-bottom: 0.75rem;
    text-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
  }
  
  .access-subtitle {
    font-family: 'Oswald', sans-serif;
    font-size: 1.2rem;
    font-weight: 300;
    color: rgba(215, 38, 56, 0.8);
    text-transform: uppercase;
    letter-spacing: 0.15em;
    margin-bottom: 1.5rem;
  }
  
  .access-message {
    font-family: 'Oswald', sans-serif;
    font-size: 1rem;
    font-weight: 300;
    color: var(--color-foreground);
    opacity: 0.8;
    line-height: 1.6;
    max-width: 400px;
    margin: 0 auto;
  }
  
  /* Access Methods */
  .access-methods {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    margin-bottom: 2rem;
  }
  
  .access-method {
    background-color: var(--color-background-ui);
    border-radius: 12px;
    padding: 2rem;
    border: 2px solid rgba(215, 38, 56, 0.08);
    box-shadow: 
      0 8px 32px rgba(0, 0, 0, 0.15),
      inset 0 1px 0 rgba(215, 38, 56, 0.02);
    transition: all 0.3s ease;
  }
  
  .access-method:hover {
    border-color: rgba(215, 38, 56, 0.15);
    transform: translateY(-2px);
    box-shadow: 
      0 12px 40px rgba(0, 0, 0, 0.2),
      inset 0 1px 0 rgba(215, 38, 56, 0.04);
  }
  
  .method-header {
    text-align: center;
    margin-bottom: 1.5rem;
  }
  
  .method-icon {
    margin-bottom: 1rem;
    color: rgba(215, 38, 56, 0.7);
  }
  
  .method-icon.verified {
    color: rgba(34, 197, 94, 0.8);
  }
  
  .method-icon.denied {
    color: rgba(239, 68, 68, 0.8);
  }
  
  .method-title {
    font-family: 'Oswald', sans-serif;
    font-size: 1.3rem;
    font-weight: 500;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 0.5rem;
  }
  
  .method-description {
    font-family: 'Oswald', sans-serif;
    font-size: 0.9rem;
    font-weight: 300;
    color: var(--color-foreground);
    opacity: 0.7;
    text-transform: uppercase;
    letter-spacing: 0.1em;
  }
  
  /* Password Entry Styles */
  .password-entry {
    margin-top: 1.5rem;
  }
  
  .password-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .input-group {
    display: flex;
    gap: 0.5rem;
    align-items: stretch;
  }
  
  .access-input {
    flex: 1;
    padding: 1rem 1.5rem;
    background: var(--color-background);
    border: 2px solid rgba(215, 38, 56, 0.15);
    border-radius: 8px;
    font-family: 'Oswald', sans-serif;
    font-size: 0.9rem;
    font-weight: 400;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    transition: all 0.3s ease;
    outline: none;
  }
  
  .access-input:focus {
    border-color: rgba(215, 38, 56, 0.4);
    box-shadow: 0 0 0 3px rgba(215, 38, 56, 0.1);
  }
  
  .access-input::placeholder {
    color: var(--color-foreground);
    opacity: 0.5;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .access-submit {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem 1.5rem;
    background: linear-gradient(135deg, 
      rgba(215, 38, 56, 0.8) 0%, 
      rgba(160, 27, 42, 0.9) 100%);
    color: var(--color-foreground);
    font-family: 'Oswald', sans-serif;
    font-size: 0.9rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(215, 38, 56, 0.2);
    white-space: nowrap;
  }
  
  .access-submit:hover {
    background: linear-gradient(135deg, 
      rgba(215, 38, 56, 0.9) 0%, 
      rgba(160, 27, 42, 1) 100%);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(215, 38, 56, 0.3);
  }
  
  .password-error {
    padding: 1rem;
    background: linear-gradient(135deg, 
      rgba(239, 68, 68, 0.1) 0%, 
      rgba(220, 38, 38, 0.15) 100%);
    border: 1px solid rgba(239, 68, 68, 0.2);
    border-radius: 8px;
    text-align: center;
  }
  
  .password-error p {
    font-family: 'Oswald', sans-serif;
    font-size: 0.85rem;
    font-weight: 400;
    color: rgba(239, 68, 68, 0.9);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin: 0;
  }
  
  .password-protected-content {
    margin-top: 2rem;
    padding: 2rem;
    background: linear-gradient(135deg, 
      rgba(215, 38, 56, 0.05) 0%, 
      rgba(160, 27, 42, 0.08) 100%);
    border-radius: 12px;
    border: 2px solid rgba(215, 38, 56, 0.15);
    animation: fadeIn 0.5s ease-in-out;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes shake {
    0%, 100% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(-5px);
    }
    75% {
      transform: translateX(5px);
    }
  }
  
  /* Protected Content */
  .protected-content {
    margin-top: 2rem;
    padding: 2rem;
    background: linear-gradient(135deg, 
      rgba(215, 38, 56, 0.05) 0%, 
      rgba(160, 27, 42, 0.08) 100%);
    border-radius: 12px;
    border: 2px solid rgba(215, 38, 56, 0.1);
  }
  
  .default-content h2 {
    font-family: 'Oswald', sans-serif;
    font-size: 1.5rem;
    font-weight: 500;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 1rem;
    text-align: center;
  }
  
  .default-content p {
    font-family: 'Oswald', sans-serif;
    font-size: 1rem;
    font-weight: 300;
    color: var(--color-foreground);
    opacity: 0.8;
    line-height: 1.6;
    margin-bottom: 2rem;
  }
  
  .member-benefits {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 2rem;
  }
  
  .benefit-item {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-family: 'Oswald', sans-serif;
    font-size: 0.9rem;
    font-weight: 400;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .benefit-item svg {
    color: rgba(215, 38, 56, 0.7);
    flex-shrink: 0;
  }
  
  /* Access Denied Styles */
  .access-denied {
    border-color: rgba(239, 68, 68, 0.15);
  }
  
  .upgrade-message {
    text-align: center;
    margin-top: 1.5rem;
    padding: 1.5rem;
    background: linear-gradient(135deg, 
      rgba(239, 68, 68, 0.05) 0%, 
      rgba(220, 38, 38, 0.08) 100%);
    border-radius: 8px;
    border: 1px solid rgba(239, 68, 68, 0.1);
  }
  
  .upgrade-message p {
    font-family: 'Oswald', sans-serif;
    font-size: 0.9rem;
    font-weight: 300;
    color: var(--color-foreground);
    opacity: 0.8;
    margin-bottom: 1.5rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .upgrade-btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem 2rem;
    background: linear-gradient(135deg, 
      rgba(215, 38, 56, 0.8) 0%, 
      rgba(160, 27, 42, 0.9) 100%);
    color: var(--color-foreground);
    font-family: 'Oswald', sans-serif;
    font-size: 0.9rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    text-decoration: none;
    border-radius: 8px;
    margin-bottom: 1.5rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(215, 38, 56, 0.2);
  }
  
  .upgrade-btn:hover {
    background: linear-gradient(135deg, 
      rgba(215, 38, 56, 0.9) 0%, 
      rgba(160, 27, 42, 1) 100%);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(215, 38, 56, 0.3);
  }
  
  .current-access p {
    font-family: 'Oswald', sans-serif;
    font-size: 0.8rem;
    font-weight: 400;
    color: var(--color-foreground);
    opacity: 0.7;
    margin-bottom: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .access-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: center;
  }
  
  .access-tag {
    font-family: 'Oswald', sans-serif;
    font-size: 0.7rem;
    font-weight: 500;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    padding: 0.25rem 0.5rem;
    background: rgba(215, 38, 56, 0.1);
    border: 1px solid rgba(215, 38, 56, 0.2);
    border-radius: 4px;
  }
  
  .access-tag.basic {
    background: rgba(156, 163, 175, 0.1);
    border-color: rgba(156, 163, 175, 0.2);
    opacity: 0.7;
  }
  
  /* Exclusive Products */
  .exclusive-products {
    margin-top: 2rem;
    padding: 2rem;
    background-color: var(--color-background);
    border-radius: 12px;
    border: 2px solid rgba(215, 38, 56, 0.1);
  }
  
  .exclusive-products h3 {
    font-family: 'Oswald', sans-serif;
    font-size: 1.3rem;
    font-weight: 500;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 1.5rem;
    text-align: center;
  }
  
  .products-preview {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 1rem;
    margin-bottom: 1.5rem;
  }
  
  .preview-product {
    text-align: center;
    padding: 1rem;
    background-color: var(--color-background-ui);
    border-radius: 8px;
    border: 1px solid rgba(215, 38, 56, 0.05);
    transition: all 0.3s ease;
  }
  
  .preview-product:hover {
    border-color: rgba(215, 38, 56, 0.15);
    transform: translateY(-2px);
  }
  
  .preview-product a {
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .preview-product img {
    width: 100%;
    height: 80px;
    object-fit: cover;
    border-radius: 4px;
    margin-bottom: 0.5rem;
  }
  
  .preview-product p {
    font-family: 'Oswald', sans-serif;
    font-size: 0.8rem;
    font-weight: 400;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.02em;
    line-height: 1.2;
    margin: 0;
  }
  
  .preview-product span {
    font-family: 'Oswald', sans-serif;
    font-size: 0.9rem;
    font-weight: 500;
    color: rgba(215, 38, 56, 0.8);
  }
  
  .view-all-exclusive {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem 1.5rem;
    background: linear-gradient(135deg, 
      rgba(215, 38, 56, 0.8) 0%, 
      rgba(160, 27, 42, 0.9) 100%);
    color: var(--color-foreground);
    font-family: 'Oswald', sans-serif;
    font-size: 0.85rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    text-decoration: none;
    border-radius: 6px;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(215, 38, 56, 0.2);
    width: 100%;
  }
  
  .view-all-exclusive:hover {
    background: linear-gradient(135deg, 
      rgba(215, 38, 56, 0.9) 0%, 
      rgba(160, 27, 42, 1) 100%);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(215, 38, 56, 0.3);
  }
  
  /* Access Footer */
  .access-footer {
    text-align: center;
    padding: 2rem;
    background-color: var(--color-background-ui);
    border-radius: 12px;
    border: 2px solid rgba(215, 38, 56, 0.05);
  }
  
  .footer-message {
    font-family: 'Oswald', sans-serif;
    font-size: 0.9rem;
    font-weight: 300;
    color: var(--color-foreground);
    opacity: 0.7;
    line-height: 1.5;
    margin-bottom: 1.5rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  .help-links {
    display: flex;
    justify-content: center;
    gap: 2rem;
    flex-wrap: wrap;
  }
  
  .back-link,
  .contact-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    font-family: 'Oswald', sans-serif;
    font-size: 0.85rem;
    font-weight: 400;
    color: var(--color-foreground);
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    opacity: 0.7;
    transition: all 0.3s ease;
  }
  
  .back-link:hover,
  .contact-link:hover {
    opacity: 1;
    color: rgba(215, 38, 56, 0.8);
  }
  
  /* Animations */
  @keyframes restrictedShift {
    0% {
      background-position: 0px 0px, 0px 0px, 0px 0px;
    }
    100% {
      background-position: 40px 40px, -60px 60px, 80px -80px;
    }
  }
  
  @keyframes lockPulse {
    0%, 100% {
      opacity: 0.7;
      transform: scale(1);
    }
    50% {
      opacity: 1;
      transform: scale(1.05);
    }
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0px) translateX(0px);
      opacity: 0.3;
    }
    25% {
      transform: translateY(-10px) translateX(5px);
      opacity: 0.7;
    }
    50% {
      transform: translateY(-5px) translateX(-3px);
      opacity: 0.5;
    }
    75% {
      transform: translateY(-15px) translateX(8px);
      opacity: 0.8;
    }
  }
  
  /* Responsive Design */
  @media (max-width: 768px) {
    .limited-access-container {
      padding: 0 1rem;
    }
    
    .access-gate-header {
      padding: 1.5rem;
    }
    
    .access-method {
      padding: 1.5rem;
    }
    
    .help-links {
      flex-direction: column;
      gap: 1rem;
    }
  }
  
  @media (max-width: 480px) {
    .limited-access-container {
      padding: 0 0.75rem;
    }
    
    .access-gate-header {
      padding: 1rem;
      margin-bottom: 2rem;
    }
    
    .access-method {
      padding: 1rem;
    }
    
    .access-footer {
      padding: 1.5rem;
    }
    
    .member-benefits {
      gap: 0.75rem;
    }
    
    .benefit-item {
      font-size: 0.8rem;
    }
  }
{% endstylesheet %}

{% assign access_password = section.settings.access_password | default: 'innercircle2024' %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const pageHandle = window.location.pathname.split('/').pop() || 'default';
    const pageAccessKey = 'innerCircleAccess_' + pageHandle;
    const correctPassword = {{ access_password | json }};
    
    console.log('Page loaded, correctPassword:', correctPassword);
    
    // Check if user already has access
    console.log('Checking existing access for key:', pageAccessKey);
    const existingAccess = sessionStorage.getItem(pageAccessKey);
    console.log('Existing access value:', existingAccess);
    
    if (existingAccess === 'granted') {
      console.log('User already has access, showing full content');
      // Immediately show content
      const accessGate = document.querySelector('.limited-access-page');
      const fullContent = document.getElementById('full-page-content');
      
      if (accessGate) accessGate.style.display = 'none';
      if (fullContent) {
        fullContent.style.display = 'block';
        fullContent.style.position = 'relative';
        fullContent.style.zIndex = '1';
        fullContent.style.background = 'red';
        fullContent.style.padding = '50px';
        fullContent.style.minHeight = '100vh';
        fullContent.style.color = 'white';
        fullContent.innerHTML = '<h1 style="font-size: 48px;">CONTENT IS NOW VISIBLE!</h1><p style="font-size: 24px;">If you can see this, the content display is working.</p>' + fullContent.innerHTML;
        console.log('Existing access - content should now be visible');
        console.log('Full content element:', fullContent);
      }
    } else {
      console.log('No existing access found');
    }
    
    // Password form handling
    const passwordForm = document.querySelector('.password-form');
    console.log('Password form element:', passwordForm);
    if (passwordForm) {
      console.log('Adding event listener to password form');
      passwordForm.addEventListener('submit', function(e) {
        console.log('Form submit event triggered');
        e.preventDefault();
        
        const passwordInput = document.getElementById('access-password');
        const enteredPassword = passwordInput ? passwordInput.value.trim() : '';
        const errorDiv = document.getElementById('password-error');
        
        console.log('Password form submitted');
        console.log('Password input element:', passwordInput);
        console.log('Entered password:', JSON.stringify(enteredPassword));
        console.log('Expected password:', JSON.stringify(correctPassword));
        console.log('Lengths - entered:', enteredPassword.length, 'expected:', correctPassword.length);
        console.log('Are equal?', enteredPassword === correctPassword);
        
        if (enteredPassword === correctPassword) {
          // Correct password
          console.log('Password correct, granting access');
          sessionStorage.setItem(pageAccessKey, 'granted');
          
          // Immediately show content without animation
          const accessGate = document.querySelector('.limited-access-page');
          const fullContent = document.getElementById('full-page-content');
          
          if (accessGate) accessGate.style.display = 'none';
          if (fullContent) {
            fullContent.style.display = 'block';
            fullContent.style.position = 'relative';
            fullContent.style.zIndex = '1';
            fullContent.style.background = 'red';
            fullContent.style.padding = '50px';
            fullContent.style.minHeight = '100vh';
            fullContent.style.color = 'white';
            fullContent.innerHTML = '<h1 style="font-size: 48px;">CONTENT IS NOW VISIBLE!</h1><p style="font-size: 24px;">If you can see this, the content display is working.</p>' + fullContent.innerHTML;
            console.log('Content should now be visible');
            console.log('Full content element:', fullContent);
          }
          
          if (errorDiv) errorDiv.style.display = 'none';
        } else {
          // Incorrect password
          console.log('Password incorrect - showing error');
          if (errorDiv) {
            errorDiv.style.display = 'block';
            console.log('Error div shown');
          } else {
            console.log('Error div not found');
          }
          if (passwordInput) passwordInput.value = '';
          
          // Add shake animation
          if (passwordInput) {
            passwordInput.style.animation = 'shake 0.5s ease-in-out';
            setTimeout(() => {
              passwordInput.style.animation = '';
            }, 500);
          }
        }
      });
    } else {
      console.log('Password form not found, looking for submit button');
      const submitButton = document.querySelector('.access-submit');
      console.log('Submit button:', submitButton);
      if (submitButton) {
        submitButton.addEventListener('click', function(e) {
          console.log('Submit button clicked');
          e.preventDefault();
          
          const passwordInput = document.getElementById('access-password');
          const enteredPassword = passwordInput ? passwordInput.value.trim() : '';
          const errorDiv = document.getElementById('password-error');
          
          console.log('Button click - Password input element:', passwordInput);
          console.log('Button click - Entered password:', JSON.stringify(enteredPassword));
          console.log('Button click - Expected password:', JSON.stringify(correctPassword));
          
          if (enteredPassword === correctPassword) {
            console.log('Password correct via button click');
            sessionStorage.setItem(pageAccessKey, 'granted');
            showAccessGrantedMessage();
            if (errorDiv) errorDiv.style.display = 'none';
          } else {
            console.log('Password incorrect via button click');
            if (errorDiv) errorDiv.style.display = 'block';
            if (passwordInput) passwordInput.value = '';
          }
        });
      }
    }
    
    function showAccessGrantedMessage() {
      const passwordEntry = document.getElementById('password-entry');
      const accessGrantedMessage = document.getElementById('access-granted-message');
      
      console.log('showAccessGrantedMessage called');
      console.log('passwordEntry:', passwordEntry);
      console.log('accessGrantedMessage:', accessGrantedMessage);
      
      if (passwordEntry && accessGrantedMessage) {
        console.log('Showing access granted message');
        passwordEntry.style.display = 'none';
        accessGrantedMessage.style.display = 'block';
        
        // After 1.5 seconds, show full page content
        setTimeout(() => {
          console.log('Showing full page content');
          showFullPageContent();
        }, 1500);
      } else {
        console.log('Missing elements for access granted message');
        // Fallback: directly show full page content
        showFullPageContent();
      }
    }
    
    function showFullPageContent() {
      const accessGrantedMessage = document.getElementById('access-granted-message');
      const fullPageContent = document.getElementById('full-page-content');
      const limitedAccessPage = document.querySelector('.limited-access-page');
      
      console.log('showFullPageContent called');
      console.log('accessGrantedMessage:', accessGrantedMessage);
      console.log('fullPageContent:', fullPageContent);
      console.log('limitedAccessPage:', limitedAccessPage);
      
      // Hide all access gate elements
      const accessGateContainer = document.querySelector('.limited-access-container');
      const accessGateAtmosphere = document.querySelector('.limited-access-atmosphere');
      
      if (accessGrantedMessage) accessGrantedMessage.style.display = 'none';
      if (limitedAccessPage) limitedAccessPage.style.display = 'none';
      if (accessGateContainer) accessGateContainer.style.display = 'none';
      if (accessGateAtmosphere) accessGateAtmosphere.style.display = 'none';
      
      if (fullPageContent) {
        console.log('Displaying full page content');
        fullPageContent.style.display = 'block';
        fullPageContent.style.position = 'fixed';
        fullPageContent.style.top = '0';
        fullPageContent.style.left = '0';
        fullPageContent.style.width = '100%';
        fullPageContent.style.height = '100vh';
        fullPageContent.style.background = 'white';
        fullPageContent.style.zIndex = '99999';
        fullPageContent.style.overflowY = 'auto';
        document.body.style.overflow = 'hidden';
      } else {
        console.log('fullPageContent element not found!');
      }
      
      // Add reset functionality
      const resetButton = document.getElementById('reset-access');
      if (resetButton) {
        resetButton.addEventListener('click', function() {
          sessionStorage.removeItem(pageAccessKey);
          if (fullPageContent) fullPageContent.style.display = 'none';
          if (limitedAccessPage) limitedAccessPage.style.display = 'flex';
          document.body.style.overflow = '';
          const passwordEntry = document.getElementById('password-entry');
          if (passwordEntry) passwordEntry.style.display = 'block';
          const passwordInput = document.getElementById('access-password');
          if (passwordInput) passwordInput.value = '';
        });
      }
    }
  });
</script>

{% schema %}
{
  "name": "Inner Circle Access",
  "settings": [
    {
      "type": "header",
      "content": "Display Settings"
    },
    {
      "type": "select",
      "id": "display_mode",
      "label": "Display Mode",
      "options": [
        {
          "value": "access_gate",
          "label": "Access Gate (Default)"
        },
        {
          "value": "full_page",
          "label": "Full Page Content"
        }
      ],
      "default": "access_gate",
      "info": "Choose how to display content: as an access gate or directly on the full page"
    },
    {
      "type": "header",
      "content": "Access Settings"
    },
    {
      "type": "text",
      "id": "access_password",
      "label": "Inner Circle Access Password",
      "info": "Set the password required to access Inner Circle content",
      "default": "innercircle2024"
    },
    {
      "type": "header",
      "content": "Exclusive Collection Settings"
    },
    {
      "type": "collection",
      "id": "exclusive_collection",
      "label": "Exclusive Collection",
      "info": "Select the collection to display for Inner Circle members (defaults to 'inner-circle' collection)"
    },
    {
      "type": "text",
      "id": "collection_title",
      "label": "Collection Section Title",
      "default": "Your Exclusive Collection",
      "info": "Title displayed above the collection products"
    },
    {
      "type": "range",
      "id": "products_display_count",
      "label": "Number of Products to Display",
      "min": 2,
      "max": 8,
      "step": 1,
      "default": 4,
      "info": "How many products to show in the preview"
    },
    {
      "type": "text",
      "id": "view_all_text",
      "label": "View All Button Text",
      "default": "View All Inner Circle Items",
      "info": "Text for the button that links to the full collection"
    }
  ]
}
{% endschema %}