{% if section.settings.show_announcement %}
<div class="announcement-bar full-width">
  <div class="announcement-content">
    {% if section.settings.announcement_icon %}
      <div class="announcement-icon">
        {{ section.settings.announcement_icon }}
      </div>
    {% endif %}
    
    <div class="announcement-text">
      {% if section.settings.announcement_url %}
        <a href="{{ section.settings.announcement_url }}" class="announcement-link">
          {{ section.settings.announcement_text }}
        </a>
      {% else %}
        {{ section.settings.announcement_text }}
      {% endif %}
    </div>
    
    {% if section.settings.show_close_button %}
      <button class="announcement-close" onclick="this.parentElement.parentElement.style.display='none'" aria-label="Close announcement">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="18" y1="6" x2="6" y2="18"/>
          <line x1="6" y1="6" x2="18" y2="18"/>
        </svg>
      </button>
    {% endif %}
  </div>
</div>
{% endif %}

{% stylesheet %}
  .announcement-bar {
    position: relative;
    width: 100%;
    background: linear-gradient(135deg, 
      rgba(215, 38, 56, 0.25) 0%, 
      rgba(160, 27, 42, 0.35) 50%, 
      rgba(215, 38, 56, 0.25) 100%);
    color: var(--color-foreground);
    z-index: 150;
    overflow: hidden;
  }
  
  .announcement-bar::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      radial-gradient(circle at 20% 30%, rgba(255, 255, 255, 0.08) 0.5px, transparent 0.5px),
      radial-gradient(circle at 80% 70%, rgba(255, 255, 255, 0.06) 0.5px, transparent 0.5px),
      radial-gradient(circle at 40% 80%, rgba(255, 255, 255, 0.04) 1px, transparent 1px);
    background-size: 20px 20px, 30px 30px, 40px 40px;
    animation: announcementTextureShift 50s linear infinite;
    opacity: 0.4;
    pointer-events: none;
  }
  
  .announcement-bar::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg,
      transparent 0%,
      rgba(255, 255, 255, 0.05) 10%,
      rgba(255, 255, 255, 0.15) 25%,
      rgba(255, 255, 255, 0.2) 40%,
      rgba(255, 255, 255, 0.25) 50%,
      rgba(255, 255, 255, 0.2) 60%,
      rgba(255, 255, 255, 0.15) 75%,
      rgba(255, 255, 255, 0.05) 90%,
      transparent 100%);
    animation: announcementBorderGlow 6s ease-in-out infinite;
  }
  
  .announcement-content {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    padding: 0.75rem 2rem;
    z-index: 2;
    min-height: 44px;
  }
  
  .announcement-icon {
    display: flex;
    align-items: center;
    font-size: 1rem;
    opacity: 0.9;
  }
  
  .announcement-text {
    font-family: 'Oswald', sans-serif;
    font-size: 0.9rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    text-align: center;
    line-height: 1.4;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
  }
  
  .announcement-link {
    color: inherit;
    text-decoration: none;
    transition: all 0.3s ease;
    position: relative;
  }
  
  .announcement-link::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 1px;
    background: rgba(255, 255, 255, 0.8);
    transition: width 0.3s ease;
  }
  
  .announcement-link:hover {
    opacity: 0.9;
    transform: translateY(-1px);
  }
  
  .announcement-link:hover::after {
    width: 100%;
  }
  
  .announcement-close {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    color: rgba(255, 255, 255, 0.8);
    cursor: pointer;
    padding: 0.4rem;
    border-radius: 50%;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }
  
  .announcement-close:hover {
    background: rgba(255, 255, 255, 0.2);
    color: rgba(255, 255, 255, 1);
    transform: translateY(-50%) scale(1.1);
  }
  
  .announcement-close svg {
    width: 14px;
    height: 14px;
  }
  
  /* Animations */
  @keyframes announcementTextureShift {
    0% {
      background-position: 0px 0px, 0px 0px, 0px 0px;
    }
    100% {
      background-position: 20px 20px, -30px 30px, 40px -40px;
    }
  }
  
  @keyframes announcementBorderGlow {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.6;
    }
  }
  
  /* Responsive Design */
  @media (max-width: 768px) {
    .announcement-content {
      padding: 0.6rem 1rem;
      gap: 0.5rem;
    }
    
    .announcement-text {
      font-size: 0.8rem;
      letter-spacing: 0.08em;
    }
    
    .announcement-close {
      right: 0.75rem;
      padding: 0.3rem;
    }
    
    .announcement-close svg {
      width: 12px;
      height: 12px;
    }
  }
  
  @media (max-width: 480px) {
    .announcement-content {
      padding: 0.5rem 0.75rem;
      padding-right: 2.5rem;
    }
    
    .announcement-text {
      font-size: 0.75rem;
      letter-spacing: 0.06em;
    }
    
    .announcement-close {
      right: 0.5rem;
    }
  }
{% endstylesheet %}

{% schema %}
{
  "name": "Announcement Bar",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_announcement",
      "label": "Show announcement bar",
      "default": true
    },
    {
      "type": "text",
      "id": "announcement_text",
      "label": "Announcement text",
      "default": "The Inner Circle - Now on Discord"
    },
    {
      "type": "url",
      "id": "announcement_url",
      "label": "Announcement link (optional)",
      "info": "Leave empty to make text non-clickable"
    },
    {
      "type": "text",
      "id": "announcement_icon",
      "label": "Announcement icon (optional)",
      "info": "Add an emoji or symbol before the text"
    },
    {
      "type": "checkbox",
      "id": "show_close_button",
      "label": "Show close button",
      "default": true,
      "info": "Allow users to close the announcement bar"
    }
  ],
  "presets": [
    {
      "name": "Announcement Bar"
    }
  ]
}
{% endschema %}