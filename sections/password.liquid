{% comment %}
  This section is used in the password template to render landing page shown
  when password protection is applied to a store.

  https://shopify.dev/docs/storefronts/themes/architecture/templates/password
{% endcomment %}

{% if section.settings.enable_preloader and section.settings.preloader_image %}
  <div id="preloader" class="preloader" style="background-color: {{ section.settings.preloader_background | default: '#0E0E10' }};">
    <div class="preloader-content">
      <img 
        src="{{ section.settings.preloader_image | image_url: width: section.settings.preloader_size }}" 
        alt="Loading..." 
        class="preloader-image"
        width="{{ section.settings.preloader_size }}"
        height="{{ section.settings.preloader_size }}"
      >
    </div>
  </div>
{% endif %}

<!-- Floating Particles -->
<div class="particles">
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
</div>

<!-- Ornamental Borders -->
<div class="ornamental-borders">
  <!-- Top Border -->
  <div class="border-top">
    <div class="ornament-pattern"></div>
  </div>
  
  <!-- Bottom Border -->
  <div class="border-bottom">
    <div class="ornament-pattern"></div>
  </div>
  
  <!-- Side Borders -->
  <div class="border-left">
    <div class="ornament-vertical"></div>
  </div>
  <div class="border-right">
    <div class="ornament-vertical"></div>
  </div>
</div>

<!-- Texture Overlays -->
<div class="texture-overlays">
  <div class="texture-noise"></div>
  <div class="texture-fabric"></div>
</div>

<!-- Smoke Overlay -->
<div class="smoke-overlay">
  <div class="smoke-layer smoke-1"></div>
  <div class="smoke-layer smoke-2"></div>
  <div class="smoke-layer smoke-3"></div>
  <div class="smoke-layer smoke-4"></div>
</div>

<!-- Social Icons -->
{% assign has_social = false %}
{% if section.settings.instagram_url != blank or section.settings.tiktok_url != blank or section.settings.discord_url != blank %}
  {% assign has_social = true %}
{% endif %}

{% if has_social %}
<div class="social-icons">
  {% if section.settings.instagram_url != blank %}
    <a href="{{ section.settings.instagram_url }}" class="social-icon instagram-icon" aria-label="Instagram" target="_blank" rel="noopener">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <rect x="2" y="2" width="20" height="20" rx="5" ry="5"/>
        <path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"/>
        <line x1="17.5" y1="6.5" x2="17.51" y2="6.5"/>
      </svg>
    </a>
  {% endif %}
  
  {% if section.settings.tiktok_url != blank %}
    <a href="{{ section.settings.tiktok_url }}" class="social-icon tiktok-icon" aria-label="TikTok" target="_blank" rel="noopener">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
        <path d="M19.59 6.69a4.83 4.83 0 0 1-3.77-4.25V2h-3.45v13.67a2.89 2.89 0 0 1-5.2 1.74 2.89 2.89 0 0 1 2.31-4.64 2.93 2.93 0 0 1 .88.13V9.4a6.84 6.84 0 0 0-1-.05A6.33 6.33 0 0 0 5 20.1a6.34 6.34 0 0 0 10.86-4.43v-7a8.16 8.16 0 0 0 4.77 1.52v-3.4a4.85 4.85 0 0 1-.04-.1z"/>
      </svg>
    </a>
  {% endif %}
  
  {% if section.settings.discord_url != blank %}
    <a href="{{ section.settings.discord_url }}" class="social-icon discord-icon" aria-label="Discord" target="_blank" rel="noopener">
      <svg width="24" height="24" viewBox="0 0 71 55" fill="currentColor">
        <g clip-path="url(#clip0)">
          <path d="M60.1045 4.8978C55.5792 2.8214 50.7265 1.2916 45.6527 0.41542C45.5603 0.39851 45.468 0.440769 45.4204 0.525289C44.7963 1.6353 44.105 3.0834 43.6209 4.2216C38.1637 3.4046 32.7345 3.4046 27.3892 4.2216C26.905 3.0581 26.1886 1.6353 25.5617 0.525289C25.5141 0.443589 25.4218 0.40133 25.3294 0.41542C20.2584 1.2888 15.4057 2.8186 10.8776 4.8978C10.8384 4.9147 10.8048 4.9429 10.7825 4.9795C1.57795 18.7309 -0.943561 32.1443 0.293408 45.3914C0.299005 45.4562 0.335386 45.5182 0.385761 45.5576C6.45866 50.0174 12.3413 52.7249 18.1147 54.5195C18.2071 54.5477 18.305 54.5139 18.3638 54.4378C19.7295 52.5728 20.9469 50.6063 21.9907 48.5383C22.0523 48.4172 21.9935 48.2735 21.8676 48.2256C19.9366 47.4931 18.0979 46.6 16.3292 45.5858C16.1893 45.5041 16.1781 45.304 16.3068 45.2082C16.679 44.9293 17.0513 44.6391 17.4067 44.3461C17.471 44.2926 17.5606 44.2813 17.6362 44.3151C29.2558 49.6202 41.8354 49.6202 53.3179 44.3151C53.3935 44.2785 53.4831 44.2898 53.5502 44.3433C53.9057 44.6363 54.2779 44.9293 54.6529 45.2082C54.7816 45.304 54.7732 45.5041 54.6333 45.5858C52.8646 46.6197 51.0259 47.4931 49.0921 48.2228C48.9662 48.2707 48.9102 48.4172 48.9718 48.5383C50.038 50.6034 51.2554 52.5699 52.5959 54.435C52.6519 54.5139 52.7526 54.5477 52.845 54.5195C58.6464 52.7249 64.529 50.0174 70.6019 45.5576C70.6551 45.5182 70.6887 45.459 70.6943 45.3942C72.1747 30.0791 68.2147 16.7757 60.1968 4.9823C60.1772 4.9429 60.1437 4.9147 60.1045 4.8978ZM23.7259 37.3253C20.2276 37.3253 17.3451 34.1136 17.3451 30.1693C17.3451 26.225 20.1717 23.0133 23.7259 23.0133C27.308 23.0133 30.1626 26.2532 30.1066 30.1693C30.1066 34.1136 27.2801 37.3253 23.7259 37.3253ZM47.3178 37.3253C43.8196 37.3253 40.9371 34.1136 40.9371 30.1693C40.9371 26.225 43.7636 23.0133 47.3178 23.0133C50.9 23.0133 53.7545 26.2532 53.6986 30.1693C53.6986 34.1136 50.9 37.3253 47.3178 37.3253Z"/>
        </g>
        <defs>
          <clipPath id="clip0">
            <rect width="71" height="55"/>
          </clipPath>
        </defs>
      </svg>
    </a>
  {% endif %}
</div>
{% endif %}

<!-- Login Button in Top Right -->
<div class="login-button-container">
  <button id="login-btn" class="login-button" aria-label="Login">
    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"></path>
      <polyline points="10,17 15,12 10,7"></polyline>
      <line x1="15" y1="12" x2="3" y2="12"></line>
    </svg>
  </button>
</div>

<!-- Login Popup Modal -->
<div id="login-modal" class="login-modal" style="display: none;">
  <div class="modal-overlay" id="modal-overlay"></div>
  <div class="modal-content">
    <div class="modal-header">
      <h2>THE INNER CIRCLE</h2>
      <button id="close-modal" class="close-button" aria-label="Close">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>
    
    <div class="modal-body">
      {% if shop.password_message %}
        <p class="password-message">{{ shop.password_message }}</p>
      {% endif %}

      {% form 'storefront_password' %}
        {% if form.errors %}
          <div class="form-errors">{{ form.errors | default_errors }}</div>
        {% endif %}

        <label for="password-input-modal" class="password-label">
          {{ 'password.password' | t }}
        </label>

        <input type="password" name="password" id="password-input-modal" class="password-input">

        <button type="submit" class="password-submit">
          {{ 'password.enter' | t }}
        </button>
      {% endform %}
    </div>
  </div>
</div>
<div class="password-content" {% if section.settings.enable_preloader and section.settings.preloader_image %}style="display: none;"{% endif %}>
  
  <!-- Logo Section -->
  {% if section.settings.logo_image %}
    <div class="logo-section">
      <img 
        src="{{ section.settings.logo_image | image_url: width: section.settings.logo_size }}" 
        alt="{{ shop.name }}"
        class="logo-image"
        width="{{ section.settings.logo_size }}"
        height="auto"
      >
    </div>
  {% endif %}

  <!-- Subtitle Section -->
  {% if section.settings.subtitle != blank %}
    <div class="subtitle-section">
      <p class="subtitle">{{ section.settings.subtitle }}</p>
    </div>
  {% endif %}

  <!-- Timer Section -->
  {% if section.settings.show_timer and section.settings.launch_date != blank %}
    <div class="timer-section">
      <div id="countdown-timer" class="countdown-timer" data-launch-date="{{ section.settings.launch_date }}">
        <div class="timer-unit">
          <span class="timer-number" id="days">00</span>
          <span class="timer-label">Days</span>
        </div>
        <div class="timer-unit">
          <span class="timer-number" id="hours">00</span>
          <span class="timer-label">Hours</span>
        </div>
        <div class="timer-unit">
          <span class="timer-number" id="minutes">00</span>
          <span class="timer-label">Minutes</span>
        </div>
        <div class="timer-unit">
          <span class="timer-number" id="seconds">00</span>
          <span class="timer-label">Seconds</span>
        </div>
      </div>
    </div>
  {% endif %}

</div>

{% if section.settings.enable_preloader and section.settings.preloader_image %}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const preloader = document.getElementById('preloader');
      const content = document.querySelector('.password-content');
      
      if (preloader && content) {
        // Hide preloader and show content after a delay
        setTimeout(function() {
          preloader.style.opacity = '0';
          setTimeout(function() {
            preloader.style.display = 'none';
            content.style.display = 'block';
            content.style.opacity = '0';
            setTimeout(function() {
              content.style.opacity = '1';
            }, 50);
          }, 500);
        }, 1500);
      }
    });
  </script>
{% endif %}

{% if section.settings.show_timer and section.settings.launch_date != blank %}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const countdownTimer = document.getElementById('countdown-timer');
      
      if (countdownTimer) {
        const launchDateStr = countdownTimer.getAttribute('data-launch-date');
        const launchDate = new Date(launchDateStr + 'T23:59:59').getTime();
        
        function updateCountdown() {
          const now = new Date().getTime();
          const distance = launchDate - now;
          
          if (distance < 0) {
            // Timer expired
            document.getElementById('days').textContent = '00';
            document.getElementById('hours').textContent = '00';
            document.getElementById('minutes').textContent = '00';
            document.getElementById('seconds').textContent = '00';
            return;
          }
          
          const days = Math.floor(distance / (1000 * 60 * 60 * 24));
          const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
          const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
          const seconds = Math.floor((distance % (1000 * 60)) / 1000);
          
          document.getElementById('days').textContent = days.toString().padStart(2, '0');
          document.getElementById('hours').textContent = hours.toString().padStart(2, '0');
          document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');
          document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');
        }
        
        // Initial update
        updateCountdown();
        
        // Update every second
        setInterval(updateCountdown, 1000);
      }
    });
  </script>
{% endif %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const loginBtn = document.getElementById('login-btn');
    const loginModal = document.getElementById('login-modal');
    const closeModal = document.getElementById('close-modal');
    const modalOverlay = document.getElementById('modal-overlay');
    const passwordInput = document.getElementById('password-input-modal');
    
    // Open modal
    if (loginBtn) {
      loginBtn.addEventListener('click', function() {
        loginModal.style.display = 'block';
        document.body.style.overflow = 'hidden';
        // Focus on password input
        setTimeout(function() {
          if (passwordInput) {
            passwordInput.focus();
          }
        }, 100);
      });
    }
    
    // Close modal function
    function closeLoginModal() {
      loginModal.style.display = 'none';
      document.body.style.overflow = 'auto';
    }
    
    // Close modal on close button click
    if (closeModal) {
      closeModal.addEventListener('click', closeLoginModal);
    }
    
    // Close modal on overlay click
    if (modalOverlay) {
      modalOverlay.addEventListener('click', closeLoginModal);
    }
    
    // Close modal on escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && loginModal.style.display === 'block') {
        closeLoginModal();
      }
    });
  });
</script>
{% stylesheet %}
  /* Atmospheric Texture Overlay */
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      radial-gradient(circle at 25% 25%, rgba(215, 38, 56, 0.02) 0%, transparent 50%),
      radial-gradient(circle at 75% 75%, rgba(215, 38, 56, 0.01) 0%, transparent 50%);
    pointer-events: none;
    z-index: 2;
    opacity: 0.5;
  }

  .preloader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    transition: opacity 0.5s ease-out;
  }
  
  .preloader-content {
    text-align: center;
  }
  
  .preloader-image {
    max-width: 100%;
    height: auto;
  }
  
  .password-content {
    transition: opacity 0.3s ease-in;
    padding: 80px 2rem 2rem;
    max-width: 800px;
    margin: 0 auto;
    min-height: 100vh;
    display: grid;
    grid-template-rows: auto auto 1fr;
    align-items: start;
    text-align: center;
    gap: 1rem;
    position: relative;
  }
  
  /* Logo Section */
  .logo-section {
    justify-self: center;
    align-self: start;
  }
  
  .logo-image {
    max-width: 100%;
    height: auto;
    display: block;
    margin: 0 auto;
    animation: float 6s ease-in-out infinite;
  }
  
  /* Subtitle Section */
  .subtitle-section {
    justify-self: center;
    align-self: start;
    margin-top: 1rem;
  }
  
  .subtitle {
    color: var(--color-foreground);
    font-family: 'Oswald', sans-serif;
    font-size: 1.5rem;
    font-weight: 300;
    margin: 0;
    opacity: 0.8;
    letter-spacing: 0.1em;
    text-transform: uppercase;
    animation: fadeInUp 1s ease-out 0.3s both;
  }
  
  /* Timer Section */
  .timer-section {
    justify-self: center;
    align-self: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
  }
  
  .countdown-timer {
    display: flex;
    gap: 2rem;
    justify-content: center;
    flex-wrap: wrap;
  }
  
  .timer-unit {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-width: 80px;
    animation: fadeInUp 1s ease-out both;
  }
  
  .timer-unit:nth-child(1) { animation-delay: 0.2s; }
  .timer-unit:nth-child(2) { animation-delay: 0.4s; }
  .timer-unit:nth-child(3) { animation-delay: 0.6s; }
  .timer-unit:nth-child(4) { animation-delay: 0.8s; }
  
  .timer-number {
    font-size: 3rem;
    font-weight: bold;
    color: var(--color-foreground);
    line-height: 1;
    margin-bottom: 0.5rem;
    font-family: monospace;
    animation: pulse 2s ease-in-out infinite;
    text-shadow: 0 0 15px rgba(215, 38, 56, 0.6);
  }
  
  .timer-label {
    font-family: 'Oswald', sans-serif;
    font-size: 0.875rem;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.15em;
    opacity: 0.7;
    font-weight: 400;
    animation: fadeInUp 1s ease-out 0.5s both;
  }
  
  /* Login Button in Top Right */
  .login-button-container {
    position: fixed;
    top: 2rem;
    right: 2rem;
    z-index: 2000;
    display: block;
  }
  
  .login-button {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background-color: var(--color-background-ui);
    border: 2px solid var(--color-background-muted);
    color: var(--color-foreground);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
    position: relative;
    opacity: 1;
  }
  
  .login-button:hover {
    background-color: var(--color-foreground);
    border-color: var(--color-foreground);
    color: var(--color-background);
    transform: scale(1.05);
  }
  
  .login-button svg {
    transition: transform 0.2s ease;
  }
  
  .login-button:hover svg {
    transform: translateX(2px);
  }
  
  /* Login Modal */
  .login-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999;
  }
  
  .modal-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(5px);
  }
  
  .modal-content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--color-background-ui);
    border: 2px solid var(--color-background-muted);
    border-radius: 12px;
    width: 90%;
    max-width: 400px;
    max-height: 90vh;
    overflow-y: auto;
  }
  
  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 1.5rem 0;
    margin-bottom: 1rem;
  }
  
  .modal-header h2 {
    color: var(--color-foreground);
    font-family: 'Oswald', sans-serif;
    margin: 0;
    font-size: 1.5rem;
    font-weight: 500;
    letter-spacing: 0.1em;
  }
  
  .close-button {
    width: 32px;
    height: 32px;
    border: none;
    background: none;
    color: var(--color-foreground);
    cursor: pointer;
    border-radius: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s ease;
  }
  
  .close-button:hover {
    background-color: var(--color-background-muted);
  }
  
  .modal-body {
    padding: 0 1.5rem 1.5rem;
  }
  
  .modal-body .password-message {
    color: var(--color-foreground);
    margin-bottom: 1.5rem;
    opacity: 0.8;
    text-align: center;
  }
  
  .modal-body .form-errors {
    text-align: center;
  }
  
  .form-errors {
    color: var(--color-accent-red);
    margin-bottom: 1rem;
    padding: 0.75rem;
    background-color: rgba(215, 38, 56, 0.1);
    border-radius: var(--style-border-radius-inputs);
    border: 1px solid var(--color-accent-red);
  }
  
  .modal-body .password-label,
  .password-label {
    color: var(--color-foreground);
    font-family: 'Oswald', sans-serif;
    display: block;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    font-weight: 400;
  }
  
  .modal-body .password-input {
    width: 100%;
    padding: 0.75rem;
    margin-bottom: 1.5rem;
    background-color: var(--color-background);
    border: 2px solid var(--color-background-muted);
    border-radius: var(--style-border-radius-inputs);
    color: var(--color-foreground);
    font-size: 1rem;
    box-sizing: border-box;
  }
  
  .password-input {
    width: 100%;
    padding: 0.75rem;
    margin-bottom: 1rem;
    background-color: var(--color-background-ui);
    border: 2px solid var(--color-background-muted);
    border-radius: var(--style-border-radius-inputs);
    color: var(--color-foreground);
    font-size: 1rem;
    box-sizing: border-box;
  }
  
  .modal-body .password-input:focus,
  .password-input:focus {
    outline: none;
    border-color: var(--color-foreground);
  }
  
  .modal-body .password-submit,
  .password-submit {
    width: 100%;
    padding: 0.75rem 1.5rem;
    background-color: var(--color-foreground);
    color: var(--color-background);
    font-family: 'Oswald', sans-serif;
    border: none;
    border-radius: var(--style-border-radius-inputs);
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.2s ease;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    font-weight: 500;
  }
  
  .modal-body .password-submit:hover,
  .password-submit:hover {
    background-color: rgba(215, 38, 56, 0.8);
  }
  
  /* Ornamental Borders */
  .ornamental-borders {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
  }
  
  .border-top, .border-bottom {
    position: absolute;
    width: 100%;
    height: 3px;
    left: 0;
  }
  
  .border-top {
    top: 60px;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba(215, 38, 56, 0.15) 20%, 
      rgba(215, 38, 56, 0.3) 50%, 
      rgba(215, 38, 56, 0.15) 80%, 
      transparent 100%);
    animation: borderPulse 8s ease-in-out infinite;
  }
  
  .border-bottom {
    bottom: 40px;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba(215, 38, 56, 0.12) 25%, 
      rgba(215, 38, 56, 0.25) 50%, 
      rgba(215, 38, 56, 0.12) 75%, 
      transparent 100%);
    animation: borderPulse 8s ease-in-out infinite 4s;
  }
  
  .border-left, .border-right {
    position: absolute;
    width: 2px;
    height: 100%;
    top: 0;
  }
  
  .border-left {
    left: 30px;
    top: 60px;
    height: calc(100% - 100px);
    background: linear-gradient(180deg, 
      transparent 0%, 
      rgba(215, 38, 56, 0.12) 30%, 
      rgba(215, 38, 56, 0.2) 50%, 
      rgba(215, 38, 56, 0.12) 70%, 
      transparent 100%);
    animation: borderVerticalPulse 10s ease-in-out infinite;
  }
  
  .border-right {
    right: 30px;
    top: 60px;
    height: calc(100% - 100px);
    background: linear-gradient(180deg, 
      transparent 0%, 
      rgba(255, 255, 255, 0.1) 25%, 
      rgba(255, 255, 255, 0.2) 50%, 
      rgba(255, 255, 255, 0.1) 75%, 
      transparent 100%);
    animation: borderVerticalPulse 10s ease-in-out infinite 5s;
  }
  
  /* Texture Overlays */
  .texture-overlays {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
  }
  
  .texture-noise {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      radial-gradient(circle at 25% 25%, rgba(215, 38, 56, 0.08) 0.5px, transparent 0.5px),
      radial-gradient(circle at 75% 75%, rgba(215, 38, 56, 0.06) 0.5px, transparent 0.5px),
      radial-gradient(circle at 50% 10%, rgba(215, 38, 56, 0.04) 1px, transparent 1px),
      radial-gradient(circle at 80% 40%, rgba(215, 38, 56, 0.03) 0.8px, transparent 0.8px);
    background-size: 15px 15px, 25px 25px, 35px 35px, 20px 20px;
    animation: textureShift 30s linear infinite;
    opacity: 1;
  }
  
  .texture-fabric {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      repeating-linear-gradient(
        45deg,
        rgba(215, 38, 56, 0.02) 0px,
        rgba(215, 38, 56, 0.02) 1px,
        transparent 1px,
        transparent 8px
      ),
      repeating-linear-gradient(
        -45deg,
        rgba(215, 38, 56, 0.015) 0px,
        rgba(215, 38, 56, 0.015) 1px,
        transparent 1px,
        transparent 12px
      ),
      repeating-linear-gradient(
        90deg,
        rgba(215, 38, 56, 0.01) 0px,
        rgba(215, 38, 56, 0.01) 0.5px,
        transparent 0.5px,
        transparent 6px
      );
    opacity: 1;
  }
  
  /* Smoke Overlay */
  .smoke-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
    overflow: hidden;
  }
  
  .smoke-layer {
    position: absolute;
    width: 200%;
    height: 200%;
    background: radial-gradient(ellipse at center, 
      rgba(215, 38, 56, 0.04) 0%, 
      rgba(215, 38, 56, 0.015) 25%, 
      rgba(215, 38, 56, 0.008) 50%, 
      transparent 70%);
    border-radius: 50%;
    filter: blur(40px);
  }
  
  .smoke-1 {
    top: -50%;
    left: -30%;
    animation: smokeFloat1 25s ease-in-out infinite;
    transform: scale(0.8);
    opacity: 0;
  }
  
  .smoke-2 {
    top: -20%;
    right: -40%;
    animation: smokeFloat2 30s ease-in-out infinite;
    transform: scale(1.2);
    animation-delay: 8s;
    opacity: 0;
  }
  
  .smoke-3 {
    bottom: -40%;
    left: -20%;
    animation: smokeFloat3 35s ease-in-out infinite;
    transform: scale(1.0);
    animation-delay: 15s;
    opacity: 0;
  }
  
  .smoke-4 {
    bottom: -30%;
    right: -30%;
    animation: smokeFloat4 28s ease-in-out infinite;
    transform: scale(0.9);
    animation-delay: 22s;
    opacity: 0;
  }
  
  /* Social Icons */
  .social-icons {
    position: fixed;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 2rem;
    z-index: 1000;
  }
  
  .social-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    color: var(--color-foreground);
    text-decoration: none;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }
  
  .social-icon:hover {
    background-color: rgba(215, 38, 56, 0.4);
    border-color: rgba(215, 38, 56, 0.7);
    transform: translateY(-2px);
    box-shadow: 0 4px 20px rgba(215, 38, 56, 0.4);
  }
  
  .social-icon svg {
    opacity: 0.8;
    transition: opacity 0.3s ease;
  }
  
  .social-icon:hover svg {
    opacity: 1;
  }

  /* Particle Effects */
  .particles {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
  }
  
  .particle {
    position: absolute;
    width: 3px;
    height: 3px;
    background: var(--color-foreground);
    border-radius: 50%;
    opacity: 0.7;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.6);
  }
  
  .particle:nth-child(1) { left: 10%; animation: float-particle 20s linear infinite; animation-delay: 0s; }
  .particle:nth-child(2) { left: 20%; animation: float-particle 25s linear infinite; animation-delay: 2s; }
  .particle:nth-child(3) { left: 30%; animation: float-particle 18s linear infinite; animation-delay: 4s; }
  .particle:nth-child(4) { left: 40%; animation: float-particle 22s linear infinite; animation-delay: 6s; }
  .particle:nth-child(5) { left: 50%; animation: float-particle 28s linear infinite; animation-delay: 8s; }
  .particle:nth-child(6) { left: 60%; animation: float-particle 24s linear infinite; animation-delay: 10s; }
  .particle:nth-child(7) { left: 70%; animation: float-particle 26s linear infinite; animation-delay: 12s; }
  .particle:nth-child(8) { left: 80%; animation: float-particle 19s linear infinite; animation-delay: 14s; }
  .particle:nth-child(9) { left: 90%; animation: float-particle 21s linear infinite; animation-delay: 16s; }
  .particle:nth-child(10) { left: 15%; animation: float-particle 23s linear infinite; animation-delay: 18s; }
  
  /* Keyframe Animations */
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-8px); }
  }
  
  @keyframes pulse {
    0%, 100% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.05); opacity: 0.8; }
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 0.7;
      transform: translateY(0);
    }
  }
  
  @keyframes float-particle {
    0% {
      transform: translateY(100vh) translateX(0px);
      opacity: 0;
    }
    10% {
      opacity: 0.7;
    }
    90% {
      opacity: 0.7;
    }
    100% {
      transform: translateY(-100px) translateX(50px);
      opacity: 0;
    }
  }
  
  @keyframes borderPulse {
    0%, 100% {
      opacity: 0.3;
      transform: scaleX(1);
    }
    50% {
      opacity: 0.6;
      transform: scaleX(1.02);
    }
  }
  
  @keyframes borderVerticalPulse {
    0%, 100% {
      opacity: 0.2;
      transform: scaleY(1);
    }
    50% {
      opacity: 0.5;
      transform: scaleY(1.01);
    }
  }
  
  @keyframes textureShift {
    0% {
      background-position: 0px 0px, 0px 0px, 0px 0px, 0px 0px;
    }
    100% {
      background-position: 15px 15px, -25px 25px, 35px -35px, 20px 20px;
    }
  }
  
  @keyframes smokeFloat1 {
    0% {
      transform: translate(10px, 10px) rotate(2deg) scale(0.85);
      opacity: 0;
    }
    5% {
      opacity: 0.3;
    }
    25% {
      transform: translate(20px, -20px) rotate(5deg) scale(0.9);
      opacity: 0.6;
    }
    50% {
      transform: translate(-5px, -50px) rotate(-1deg) scale(1.0);
      opacity: 0.4;
    }
    75% {
      transform: translate(25px, -30px) rotate(6deg) scale(0.88);
      opacity: 0.5;
    }
    95% {
      opacity: 0.2;
    }
    100% {
      transform: translate(10px, 10px) rotate(2deg) scale(0.85);
      opacity: 0;
    }
  }
  
  @keyframes smokeFloat2 {
    0% {
      transform: translate(-5px, 15px) rotate(-2deg) scale(1.15);
      opacity: 0;
    }
    8% {
      opacity: 0.2;
    }
    33% {
      transform: translate(-20px, 25px) rotate(-3deg) scale(1.0);
      opacity: 0.6;
    }
    66% {
      transform: translate(10px, 45px) rotate(4deg) scale(1.25);
      opacity: 0.3;
    }
    92% {
      opacity: 0.1;
    }
    100% {
      transform: translate(-5px, 15px) rotate(-2deg) scale(1.15);
      opacity: 0;
    }
  }
  
  @keyframes smokeFloat3 {
    0% {
      transform: translate(15px, -5px) rotate(3deg) scale(1.05);
      opacity: 0;
    }
    10% {
      opacity: 0.2;
    }
    20% {
      transform: translate(35px, -15px) rotate(8deg) scale(1.1);
      opacity: 0.5;
    }
    50% {
      transform: translate(-10px, -40px) rotate(-2deg) scale(0.95);
      opacity: 0.4;
    }
    80% {
      transform: translate(20px, -25px) rotate(5deg) scale(1.08);
      opacity: 0.3;
    }
    90% {
      opacity: 0.1;
    }
    100% {
      transform: translate(15px, -5px) rotate(3deg) scale(1.05);
      opacity: 0;
    }
  }
  
  @keyframes smokeFloat4 {
    0% {
      transform: translate(-8px, 12px) rotate(-1deg) scale(0.92);
      opacity: 0;
    }
    15% {
      opacity: 0.3;
    }
    40% {
      transform: translate(-25px, 20px) rotate(-6deg) scale(1.15);
      opacity: 0.4;
    }
    80% {
      transform: translate(15px, -20px) rotate(9deg) scale(0.85);
      opacity: 0.6;
    }
    85% {
      opacity: 0.2;
    }
    100% {
      transform: translate(-8px, 12px) rotate(-1deg) scale(0.92);
      opacity: 0;
    }
  }
  
  /* Responsive Design */
  @media (max-width: 768px) {
    .login-button-container {
      position: fixed;
      top: 1rem;
      right: 1rem;
      z-index: 2000;
      display: block;
    }
    
    .login-button {
      width: 40px;
      height: 40px;
    }
    
    .password-content {
      padding: 60px 1rem 1rem;
      gap: 1.5rem;
      grid-template-rows: auto auto 1fr;
    }
    
    .countdown-timer {
      gap: 1rem;
    }
    
    .timer-number {
      font-size: 2rem;
    }
    
    .timer-unit {
      min-width: 60px;
    }
    
    .subtitle {
      font-size: 1.25rem;
    }
    
    .modal-content {
      width: 95%;
      margin: 1rem;
    }
    
    /* Responsive Ornamental Elements */
    .border-left {
      left: 15px;
    }
    
    .border-right {
      right: 15px;
    }
    
    .social-icons {
      gap: 1.5rem;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
    }
    
    .social-icon {
      width: 44px;
      height: 44px;
    }
  }
  
  @media (max-width: 480px) {
    .login-button-container {
      position: fixed !important;
      top: 1rem !important;
      right: 1rem !important;
      left: auto !important;
      z-index: 2000 !important;
      display: block !important;
    }
    
    .login-button {
      width: 36px;
      height: 36px;
    }
    
    .login-button svg {
      width: 16px;
      height: 16px;
    }
    
    .password-content {
      padding: 1rem;
      gap: 1rem;
    }
    .countdown-timer {
      gap: 0.5rem;
    }
    
    .timer-number {
      font-size: 1.5rem;
    }
    
    .timer-unit {
      min-width: 50px;
    }
    
    .timer-label {
      font-size: 0.75rem;
    }
    
    .modal-header {
      padding: 1rem 1rem 0;
    }
    
    .modal-body {
      padding: 0 1rem 1rem;
    }
    
    /* Mobile Ornamental Adjustments */
    .border-left {
      left: 10px;
    }
    
    .border-right {
      right: 10px;
    }
    
    .social-icons {
      gap: 1rem;
      bottom: 15px;
      left: 50%;
      transform: translateX(-50%);
      width: auto;
      justify-content: center;
    }
    
    .social-icon {
      width: 40px;
      height: 40px;
    }
    
    .social-icon svg {
      width: 20px;
      height: 20px;
    }
    
    .border-top {
      top: 40px;
    }
    
    .border-left,
    .border-right {
      top: 40px;
      height: calc(100% - 60px);
    }
    
    .password-content {
      padding: 50px 1rem 1rem;
    }
    
    .border-bottom {
      bottom: 20px;
    }
  }
{% endstylesheet %}

{% schema %}
{
  "name": "t:general.password",
  "settings": [
    {
      "type": "image_picker",
      "id": "preloader_image",
      "label": "Preloader Image"
    },
    {
      "type": "range",
      "id": "preloader_size",
      "min": 50,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Preloader Size",
      "default": 100
    },
    {
      "type": "checkbox",
      "id": "enable_preloader",
      "label": "Enable Image Preloader",
      "default": true
    },
    {
      "type": "color",
      "id": "preloader_background",
      "label": "Preloader Background Color",
      "default": "#0E0E10"
    },
    {
      "type": "header",
      "content": "Page Content"
    },
    {
      "type": "image_picker",
      "id": "logo_image",
      "label": "Logo Image"
    },
    {
      "type": "range",
      "id": "logo_size",
      "min": 100,
      "max": 400,
      "step": 20,
      "unit": "px",
      "label": "Logo Size",
      "default": 200
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Brand Subtitle",
      "default": "Something exciting is coming soon"
    },
    {
      "type": "header",
      "content": "Countdown Timer"
    },
    {
      "type": "text",
      "id": "launch_date",
      "label": "Launch Date (YYYY-MM-DD)",
      "default": "2024-12-31",
      "info": "Format: YYYY-MM-DD (e.g., 2024-12-31)"
    },
    {
      "type": "checkbox",
      "id": "show_timer",
      "label": "Show Countdown Timer",
      "default": true
    },
    {
      "type": "header",
      "content": "Social Media Links"
    },
    {
      "type": "url",
      "id": "instagram_url",
      "label": "Instagram URL",
      "info": "Enter your Instagram profile URL"
    },
    {
      "type": "url",
      "id": "tiktok_url",
      "label": "TikTok URL",
      "info": "Enter your TikTok profile URL"
    },
    {
      "type": "url",
      "id": "discord_url",
      "label": "Discord URL",
      "info": "Enter your Discord server invite URL"
    }
  ]
}
{% endschema %}
