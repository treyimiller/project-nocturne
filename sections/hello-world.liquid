<!-- Timer Section -->
<section class="timer-section full-width">
  <div class="timer-background">
    <div class="timer-particles">
      <div class="particle"></div>
      <div class="particle"></div>
      <div class="particle"></div>
      <div class="particle"></div>
      <div class="particle"></div>
    </div>
    <div class="timer-content">
      <div class="timer-title">{{ section.settings.timer_title | default: 'NEXT DROP' }}</div>
      <div id="countdown-timer" class="countdown-timer" data-launch-date="{{ section.settings.launch_date | default: '2025-07-25' }}">
        <div class="timer-unit">
          <span class="timer-number" id="days">00</span>
          <span class="timer-label">Days</span>
        </div>
        <div class="timer-unit">
          <span class="timer-number" id="hours">00</span>
          <span class="timer-label">Hours</span>
        </div>
        <div class="timer-unit">
          <span class="timer-number" id="minutes">00</span>
          <span class="timer-label">Minutes</span>
        </div>
        <div class="timer-unit">
          <span class="timer-number" id="seconds">00</span>
          <span class="timer-label">Seconds</span>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Hero Section -->
<section class="hero-section full-width">
  {% if section.settings.hero_background_image %}
    <div class="hero-background">
      <img 
        src="{{ section.settings.hero_background_image | image_url: width: 1920 }}" 
        alt="{{ section.settings.hero_background_image.alt | default: 'Hero Background' }}"
        class="hero-bg-image"
        loading="eager"
      >
    </div>
  {% endif %}
  
  <!-- Background Elements -->
  <div class="hero-texture">
    <div class="hero-noise"></div>
    <div class="hero-gradient"></div>
  </div>
  
  <!-- Bottom Blend Overlay -->
  <div class="hero-blend-overlay"></div>
  
  <!-- Floating Particles -->
  <div class="hero-particles">
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
    <div class="particle"></div>
  </div>
  
  <!-- Hero Content -->
  <div class="hero-content">
    <div class="hero-collection-name">
      {% if section.settings.collection_name %}
        {{ section.settings.collection_name }}
      {% else %}
        Saints & Sinners
      {% endif %}
    </div>
    
    {% if section.settings.teaser_description %}
      <div class="hero-description">
        {{ section.settings.teaser_description }}
      </div>
    {% endif %}
    
    {% if section.settings.primary_cta_text %}
      <a href="{{ section.settings.primary_cta_url | default: '/collections/all' }}" class="hero-cta-button">
        {{ section.settings.primary_cta_text }}
      </a>
    {% endif %}
  </div>
</section>

{% stylesheet %}
  /* Prevent horizontal scroll on desktop only */
  @media (min-width: 1025px) {
    html, body {
      overflow-x: hidden !important;
      max-width: 100% !important;
    }
  }
  
  /* Atmospheric Red Background */
  html body::before {
    content: '' !important;
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    width: 100vw !important;
    height: 100vh !important;
    background: 
      radial-gradient(ellipse at -15% 50%, rgba(215, 38, 56, 0.025) 0%, transparent 35%),
      radial-gradient(ellipse at 115% 50%, rgba(215, 38, 56, 0.025) 0%, transparent 35%),
      linear-gradient(90deg, rgba(215, 38, 56, 0.008) 0%, transparent 25%, transparent 75%, rgba(215, 38, 56, 0.008) 100%) !important;
    pointer-events: none !important;
    z-index: 0 !important;
    opacity: 1 !important;
    mix-blend-mode: multiply !important;
    animation: atmosphericShift 120s ease-in-out infinite !important;
  }
  
  /* Additional Red Atmospheric Layers */
  html body::after {
    content: '' !important;
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    width: 100vw !important;
    height: 100vh !important;
    background: 
      radial-gradient(ellipse at -8% 30%, rgba(215, 38, 56, 0.012) 0%, transparent 45%),
      radial-gradient(ellipse at 108% 70%, rgba(215, 38, 56, 0.012) 0%, transparent 45%),
      linear-gradient(90deg, rgba(215, 38, 56, 0.005) 0%, transparent 18%, transparent 82%, rgba(215, 38, 56, 0.005) 100%) !important;
    pointer-events: none !important;
    z-index: 0 !important;
    opacity: 1 !important;
    mix-blend-mode: screen !important;
    animation: atmosphericShift 150s ease-in-out infinite reverse !important;
  }

  /* New Viewport Layout */
  .viewport-container {
    position: relative;
    width: 100vw;
    height: 75vh;
    display: grid;
    grid-template-rows: 25vh 50vh;
    background-color: var(--color-background);
    overflow: hidden;
    z-index: 10;
    margin-left: calc(-50vw + 50%);
  }
  
  .viewport-section {
    position: relative;
    width: 100vw;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }
  
  /* Timer Section */
  .timer-section {
    min-height: 25vh;
    background: linear-gradient(180deg, 
      var(--color-background) 0%,
      var(--color-background-ui) 60%,
      rgba(14, 14, 16, 0.98) 90%,
      rgba(14, 14, 16, 0.95) 100%);
    z-index: 999 !important;
    border-bottom: 1px solid rgba(215, 38, 56, 0.1);
    position: relative !important;
    display: block !important;
    width: 100vw !important;
    margin-bottom: 0 !important;
  }
  
  .timer-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    pointer-events: none;
  }
  
  .timer-particles {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 2;
  }
  
  .timer-particles .particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: rgba(215, 38, 56, 0.8);
    border-radius: 50%;
    box-shadow: 0 0 8px rgba(215, 38, 56, 0.6);
  }
  
  .timer-particles .particle:nth-child(1) {
    top: 20%;
    left: 15%;
    animation: timerFloat 12s ease-in-out infinite;
  }
  
  .timer-particles .particle:nth-child(2) {
    top: 60%;
    left: 80%;
    animation: timerFloat 15s ease-in-out infinite 2s;
  }
  
  .timer-particles .particle:nth-child(3) {
    top: 40%;
    left: 25%;
    animation: timerFloat 18s ease-in-out infinite 4s;
  }
  
  .timer-particles .particle:nth-child(4) {
    top: 70%;
    left: 70%;
    animation: timerFloat 14s ease-in-out infinite 1s;
  }
  
  .timer-particles .particle:nth-child(5) {
    top: 30%;
    left: 90%;
    animation: timerFloat 16s ease-in-out infinite 3s;
  }
  
  .timer-content {
    position: relative;
    z-index: 1000 !important;
    text-align: center;
    width: 100%;
    padding: 2rem 1rem;
    display: flex !important;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 25vh;
  }
  
  .timer-title {
    font-family: 'Oswald', sans-serif;
    font-size: 0.9rem;
    font-weight: 600;
    color: rgba(215, 38, 56, 0.8) !important;
    text-transform: uppercase;
    letter-spacing: 0.3em;
    margin-bottom: 1rem;
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    display: block !important;
    visibility: visible !important;
  }
  
  .countdown-timer {
    display: flex !important;
    gap: 1.5rem;
    justify-content: center;
    flex-wrap: wrap;
    visibility: visible !important;
  }
  
  .timer-unit {
    display: flex !important;
    flex-direction: column;
    align-items: center;
    min-width: 60px;
    visibility: visible !important;
  }
  
  .timer-number {
    font-size: 2rem !important;
    font-weight: bold;
    color: var(--color-foreground) !important;
    line-height: 1;
    margin-bottom: 0.25rem;
    font-family: monospace;
    text-shadow: 0 0 10px rgba(215, 38, 56, 0.4);
    display: block !important;
    visibility: visible !important;
  }
  
  .timer-label {
    font-family: 'Oswald', sans-serif;
    font-size: 0.7rem;
    color: var(--color-foreground) !important;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    opacity: 0.6;
    font-weight: 400;
    display: block !important;
    visibility: visible !important;
  }
  
  /* Hero Section */
  .hero-section {
    min-height: 50vh;
    background-color: var(--color-background);
    z-index: 5;
    position: relative;
    margin-top: 0 !important;
  }
  
  
  
  
  
  
  
  
  /* Atmospheric Animation */
  @keyframes atmosphericShift {
    0%, 100% {
      transform: translateX(0) translateY(0) scale(1);
      opacity: 1;
    }
    25% {
      transform: translateX(10px) translateY(-5px) scale(1.02);
      opacity: 0.8;
    }
    50% {
      transform: translateX(-5px) translateY(10px) scale(0.98);
      opacity: 1.1;
    }
    75% {
      transform: translateX(-8px) translateY(-3px) scale(1.01);
      opacity: 0.9;
    }
  }
  
  /* Animations */
  @keyframes heroTextureShift {
    0% {
      background-position: 0px 0px, 0px 0px, 0px 0px;
    }
    100% {
      background-position: 25px 25px, -35px 35px, 50px -50px;
    }
  }
  
  @keyframes heroFloat {
    0%, 100% {
      transform: translateY(0px) translateX(0px);
      opacity: 0.4;
    }
    25% {
      transform: translateY(-15px) translateX(8px);
      opacity: 0.8;
    }
    50% {
      transform: translateY(-30px) translateX(-8px);
      opacity: 0.6;
    }
    75% {
      transform: translateY(-15px) translateX(12px);
      opacity: 0.9;
    }
  }
  
  @keyframes timerFloat {
    0%, 100% {
      transform: translateY(0px) translateX(0px);
      opacity: 0.6;
    }
    25% {
      transform: translateY(-8px) translateX(4px);
      opacity: 1;
    }
    50% {
      transform: translateY(-16px) translateX(-4px);
      opacity: 0.8;
    }
    75% {
      transform: translateY(-8px) translateX(6px);
      opacity: 0.9;
    }
  }
  
  
  /* Responsive Design */
  @media (max-width: 768px) {
    .timer-section {
      padding: 1rem;
    }
    
    .timer-title {
      font-size: 0.8rem;
      margin-bottom: 0.75rem;
    }
    
    .countdown-timer {
      gap: 1rem;
    }
    
    .timer-number {
      font-size: 1.5rem;
    }
    
    .timer-unit {
      min-width: 50px;
    }
    
    .timer-label {
      font-size: 0.65rem;
    }
    
    .hero-collection-name {
      font-size: clamp(2.5rem, 6vw, 4rem);
      margin-bottom: 0.75rem;
    }
    
    .hero-description {
      font-size: 1rem;
      margin-bottom: 1.5rem;
    }
    
    .hero-cta-button {
      padding: 1.2rem 2.5rem;
      font-size: 0.95rem;
      border-width: 2px;
    }
  }
  
  @media (max-width: 480px) {
    .timer-section {
      padding: 0.75rem;
    }
    
    .timer-title {
      font-size: 0.75rem;
      margin-bottom: 0.5rem;
    }
    
    .countdown-timer {
      gap: 0.75rem;
    }
    
    .timer-number {
      font-size: 1.25rem;
    }
    
    .timer-unit {
      min-width: 45px;
    }
    
    .timer-label {
      font-size: 0.6rem;
    }
    
    .hero-content {
      padding: 1rem;
    }
    
    .hero-collection-name {
      font-size: clamp(2rem, 5vw, 3rem);
      margin-bottom: 0.5rem;
    }
    
    .hero-description {
      font-size: 0.9rem;
      margin-bottom: 1rem;
    }
    
    .hero-cta-button {
      padding: 1rem 2rem;
      font-size: 0.9rem;
      gap: 0.5rem;
      border-width: 2px;
      letter-spacing: 0.15em;
    }
  }
{% endstylesheet %}

<!-- JavaScript for Countdown Timer -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Countdown Timer Functionality
  const countdownTimer = document.getElementById('countdown-timer');
  
  if (countdownTimer) {
    const launchDateStr = countdownTimer.getAttribute('data-launch-date');
    const launchDate = new Date(launchDateStr + 'T23:59:59').getTime();
    
    function updateCountdown() {
      const now = new Date().getTime();
      const distance = launchDate - now;
      
      if (distance < 0) {
        // Timer expired
        document.getElementById('days').textContent = '00';
        document.getElementById('hours').textContent = '00';
        document.getElementById('minutes').textContent = '00';
        document.getElementById('seconds').textContent = '00';
        return;
      }
      
      const days = Math.floor(distance / (1000 * 60 * 60 * 24));
      const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      const seconds = Math.floor((distance % (1000 * 60)) / 1000);
      
      document.getElementById('days').textContent = days.toString().padStart(2, '0');
      document.getElementById('hours').textContent = hours.toString().padStart(2, '0');
      document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');
      document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');
    }
    
    // Initial update
    updateCountdown();
    
    // Update every second
    setInterval(updateCountdown, 1000);
  }
});
</script>

{% schema %}
{
  "name": "Hello World",
  "settings": [
    {
      "type": "header",
      "content": "Timer Section"
    },
    {
      "type": "text",
      "id": "timer_title",
      "label": "Timer Title",
      "default": "NEXT DROP",
      "info": "Title displayed above countdown timer"
    },
    {
      "type": "text",
      "id": "launch_date",
      "label": "Launch Date (YYYY-MM-DD)",
      "default": "2025-07-25",
      "info": "Format: YYYY-MM-DD (e.g., 2025-07-25)"
    },
    {
      "type": "checkbox",
      "id": "show_timer",
      "label": "Show Countdown Timer",
      "default": true
    },
    {
      "type": "header",
      "content": "Hero Section"
    },
    {
      "type": "text",
      "id": "collection_name",
      "label": "Collection Name",
      "default": "Saints & Sinners",
      "info": "Collection name displayed in hero section"
    },
    {
      "type": "textarea",
      "id": "teaser_description",
      "label": "Hero Description",
      "default": "Embrace the darkness. Join the legacy.",
      "info": "Description text displayed in hero section"
    },
    {
      "type": "image_picker",
      "id": "hero_background_image",
      "label": "Hero Background Image",
      "info": "Background image for the hero section"
    },
    {
      "type": "text",
      "id": "primary_cta_text",
      "label": "Primary CTA Text",
      "default": "SECURE NOW"
    },
    {
      "type": "url",
      "id": "primary_cta_url",
      "label": "Primary CTA URL"
    }
  ],
  "presets": [
    {
      "name": "Homepage",
      "category": "Main"
    }
  ]
}
{% endschema %}
