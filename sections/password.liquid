{% comment %}
  This section is used in the password template to render landing page shown
  when password protection is applied to a store.

  https://shopify.dev/docs/storefronts/themes/architecture/templates/password
{% endcomment %}

{% if section.settings.enable_preloader and section.settings.preloader_image %}
  <div id="preloader" class="preloader" style="background-color: {{ section.settings.preloader_background | default: '#0E0E10' }};">
    <div class="preloader-content">
      <img 
        src="{{ section.settings.preloader_image | image_url: width: section.settings.preloader_size }}" 
        alt="Loading..." 
        class="preloader-image"
        width="{{ section.settings.preloader_size }}"
        height="{{ section.settings.preloader_size }}"
      >
    </div>
  </div>
{% endif %}

<!-- Floating Particles -->
<div class="particles">
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
  <div class="particle"></div>
</div>

<!-- Ornamental Borders -->
<div class="ornamental-borders">
  <!-- Top Border -->
  <div class="border-top">
    <div class="ornament-pattern"></div>
  </div>
  
  <!-- Bottom Border -->
  <div class="border-bottom">
    <div class="ornament-pattern"></div>
  </div>
  
  <!-- Side Borders -->
  <div class="border-left">
    <div class="ornament-vertical"></div>
  </div>
  <div class="border-right">
    <div class="ornament-vertical"></div>
  </div>
</div>

<!-- Texture Overlays -->
<div class="texture-overlays">
  <div class="texture-noise"></div>
  <div class="texture-fabric"></div>
</div>

<!-- Gothic Arches -->
<div class="gothic-arches">
  <div class="arch arch-top"></div>
  <div class="arch arch-bottom"></div>
</div>

<!-- Login Button in Top Right -->
<div class="login-button-container">
  <button id="login-btn" class="login-button" aria-label="Login">
    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"></path>
      <polyline points="10,17 15,12 10,7"></polyline>
      <line x1="15" y1="12" x2="3" y2="12"></line>
    </svg>
  </button>
</div>

<!-- Login Popup Modal -->
<div id="login-modal" class="login-modal" style="display: none;">
  <div class="modal-overlay" id="modal-overlay"></div>
  <div class="modal-content">
    <div class="modal-header">
      <h2>THE INNER CIRCLE</h2>
      <button id="close-modal" class="close-button" aria-label="Close">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>
    
    <div class="modal-body">
      {% if shop.password_message %}
        <p class="password-message">{{ shop.password_message }}</p>
      {% endif %}

      {% form 'storefront_password' %}
        {% if form.errors %}
          <div class="form-errors">{{ form.errors | default_errors }}</div>
        {% endif %}

        <label for="password-input-modal" class="password-label">
          {{ 'password.password' | t }}
        </label>

        <input type="password" name="password" id="password-input-modal" class="password-input">

        <button type="submit" class="password-submit">
          {{ 'password.enter' | t }}
        </button>
      {% endform %}
    </div>
  </div>
</div>
<div class="password-content" {% if section.settings.enable_preloader and section.settings.preloader_image %}style="display: none;"{% endif %}>
  
  <!-- Logo Section -->
  {% if section.settings.logo_image %}
    <div class="logo-section">
      <img 
        src="{{ section.settings.logo_image | image_url: width: section.settings.logo_size }}" 
        alt="{{ shop.name }}"
        class="logo-image"
        width="{{ section.settings.logo_size }}"
        height="auto"
      >
    </div>
  {% endif %}

  <!-- Subtitle Section -->
  {% if section.settings.subtitle != blank %}
    <div class="subtitle-section">
      <p class="subtitle">{{ section.settings.subtitle }}</p>
    </div>
  {% endif %}

  <!-- Timer Section -->
  {% if section.settings.show_timer and section.settings.launch_date != blank %}
    <div class="timer-section">
      <div id="countdown-timer" class="countdown-timer" data-launch-date="{{ section.settings.launch_date }}">
        <div class="timer-unit">
          <span class="timer-number" id="days">00</span>
          <span class="timer-label">Days</span>
        </div>
        <div class="timer-unit">
          <span class="timer-number" id="hours">00</span>
          <span class="timer-label">Hours</span>
        </div>
        <div class="timer-unit">
          <span class="timer-number" id="minutes">00</span>
          <span class="timer-label">Minutes</span>
        </div>
        <div class="timer-unit">
          <span class="timer-number" id="seconds">00</span>
          <span class="timer-label">Seconds</span>
        </div>
      </div>
    </div>
  {% endif %}

</div>

{% if section.settings.enable_preloader and section.settings.preloader_image %}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const preloader = document.getElementById('preloader');
      const content = document.querySelector('.password-content');
      
      if (preloader && content) {
        // Hide preloader and show content after a delay
        setTimeout(function() {
          preloader.style.opacity = '0';
          setTimeout(function() {
            preloader.style.display = 'none';
            content.style.display = 'block';
            content.style.opacity = '0';
            setTimeout(function() {
              content.style.opacity = '1';
            }, 50);
          }, 500);
        }, 1500);
      }
    });
  </script>
{% endif %}

{% if section.settings.show_timer and section.settings.launch_date != blank %}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const countdownTimer = document.getElementById('countdown-timer');
      
      if (countdownTimer) {
        const launchDate = new Date(countdownTimer.getAttribute('data-launch-date') + 'T00:00:00').getTime();
        
        function updateCountdown() {
          const now = new Date().getTime();
          const distance = launchDate - now;
          
          if (distance < 0) {
            // Timer expired
            document.getElementById('days').textContent = '00';
            document.getElementById('hours').textContent = '00';
            document.getElementById('minutes').textContent = '00';
            document.getElementById('seconds').textContent = '00';
            return;
          }
          
          const days = Math.floor(distance / (1000 * 60 * 60 * 24));
          const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
          const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
          const seconds = Math.floor((distance % (1000 * 60)) / 1000);
          
          document.getElementById('days').textContent = days.toString().padStart(2, '0');
          document.getElementById('hours').textContent = hours.toString().padStart(2, '0');
          document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');
          document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');
        }
        
        // Initial update
        updateCountdown();
        
        // Update every second
        setInterval(updateCountdown, 1000);
      }
    });
  </script>
{% endif %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const loginBtn = document.getElementById('login-btn');
    const loginModal = document.getElementById('login-modal');
    const closeModal = document.getElementById('close-modal');
    const modalOverlay = document.getElementById('modal-overlay');
    const passwordInput = document.getElementById('password-input-modal');
    
    // Open modal
    if (loginBtn) {
      loginBtn.addEventListener('click', function() {
        loginModal.style.display = 'block';
        document.body.style.overflow = 'hidden';
        // Focus on password input
        setTimeout(function() {
          if (passwordInput) {
            passwordInput.focus();
          }
        }, 100);
      });
    }
    
    // Close modal function
    function closeLoginModal() {
      loginModal.style.display = 'none';
      document.body.style.overflow = 'auto';
    }
    
    // Close modal on close button click
    if (closeModal) {
      closeModal.addEventListener('click', closeLoginModal);
    }
    
    // Close modal on overlay click
    if (modalOverlay) {
      modalOverlay.addEventListener('click', closeLoginModal);
    }
    
    // Close modal on escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && loginModal.style.display === 'block') {
        closeLoginModal();
      }
    });
  });
</script>
{% stylesheet %}
  /* Atmospheric Texture Overlay */
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      radial-gradient(circle at 25% 25%, rgba(215, 38, 56, 0.02) 0%, transparent 50%),
      radial-gradient(circle at 75% 75%, rgba(255, 255, 255, 0.01) 0%, transparent 50%);
    pointer-events: none;
    z-index: 2;
    opacity: 0.5;
  }

  .preloader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    transition: opacity 0.5s ease-out;
  }
  
  .preloader-content {
    text-align: center;
  }
  
  .preloader-image {
    max-width: 100%;
    height: auto;
  }
  
  .password-content {
    transition: opacity 0.3s ease-in;
    padding: 2rem;
    max-width: 800px;
    margin: 0 auto;
    min-height: 100vh;
    display: grid;
    grid-template-rows: auto auto 1fr;
    align-items: start;
    text-align: center;
    gap: 1rem;
    position: relative;
  }
  
  /* Logo Section */
  .logo-section {
    justify-self: center;
    align-self: start;
  }
  
  .logo-image {
    max-width: 100%;
    height: auto;
    display: block;
    margin: 0 auto;
    animation: float 6s ease-in-out infinite;
  }
  
  /* Subtitle Section */
  .subtitle-section {
    justify-self: center;
    align-self: start;
    margin-top: -1rem;
  }
  
  .subtitle {
    color: var(--color-foreground);
    font-family: 'Oswald', sans-serif;
    font-size: 1.5rem;
    font-weight: 300;
    margin: 0;
    opacity: 0.8;
    letter-spacing: 0.1em;
    text-transform: uppercase;
    animation: fadeInUp 1s ease-out 0.3s both;
  }
  
  /* Timer Section */
  .timer-section {
    justify-self: center;
    align-self: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
  }
  
  .countdown-timer {
    display: flex;
    gap: 2rem;
    justify-content: center;
    flex-wrap: wrap;
  }
  
  .timer-unit {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-width: 80px;
    animation: fadeInUp 1s ease-out both;
  }
  
  .timer-unit:nth-child(1) { animation-delay: 0.2s; }
  .timer-unit:nth-child(2) { animation-delay: 0.4s; }
  .timer-unit:nth-child(3) { animation-delay: 0.6s; }
  .timer-unit:nth-child(4) { animation-delay: 0.8s; }
  
  .timer-number {
    font-size: 3rem;
    font-weight: bold;
    color: var(--color-accent-red);
    line-height: 1;
    margin-bottom: 0.5rem;
    font-family: monospace;
    animation: pulse 2s ease-in-out infinite;
    text-shadow: 0 0 10px rgba(215, 38, 56, 0.3);
  }
  
  .timer-label {
    font-family: 'Oswald', sans-serif;
    font-size: 0.875rem;
    color: var(--color-foreground);
    text-transform: uppercase;
    letter-spacing: 0.15em;
    opacity: 0.7;
    font-weight: 400;
    animation: fadeInUp 1s ease-out 0.5s both;
  }
  
  /* Login Button in Top Right */
  .login-button-container {
    position: fixed;
    top: 2rem;
    right: 2rem;
    z-index: 1000;
  }
  
  .login-button {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background-color: var(--color-background-ui);
    border: 2px solid var(--color-background-muted);
    color: var(--color-foreground);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }
  
  .login-button:hover {
    background-color: var(--color-accent-red);
    border-color: var(--color-accent-red);
    transform: scale(1.05);
  }
  
  .login-button svg {
    transition: transform 0.2s ease;
  }
  
  .login-button:hover svg {
    transform: translateX(2px);
  }
  
  /* Login Modal */
  .login-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999;
  }
  
  .modal-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(5px);
  }
  
  .modal-content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--color-background-ui);
    border: 2px solid var(--color-background-muted);
    border-radius: 12px;
    width: 90%;
    max-width: 400px;
    max-height: 90vh;
    overflow-y: auto;
  }
  
  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 1.5rem 0;
    margin-bottom: 1rem;
  }
  
  .modal-header h2 {
    color: var(--color-foreground);
    font-family: 'Oswald', sans-serif;
    margin: 0;
    font-size: 1.5rem;
    font-weight: 500;
    letter-spacing: 0.1em;
  }
  
  .close-button {
    width: 32px;
    height: 32px;
    border: none;
    background: none;
    color: var(--color-foreground);
    cursor: pointer;
    border-radius: 4px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s ease;
  }
  
  .close-button:hover {
    background-color: var(--color-background-muted);
  }
  
  .modal-body {
    padding: 0 1.5rem 1.5rem;
  }
  
  .modal-body .password-message {
    color: var(--color-foreground);
    margin-bottom: 1.5rem;
    opacity: 0.8;
    text-align: center;
  }
  
  .modal-body .form-errors {
    text-align: center;
  }
  
  .form-errors {
    color: var(--color-accent-red);
    margin-bottom: 1rem;
    padding: 0.75rem;
    background-color: rgba(215, 38, 56, 0.1);
    border-radius: var(--style-border-radius-inputs);
    border: 1px solid var(--color-accent-red);
  }
  
  .modal-body .password-label,
  .password-label {
    color: var(--color-foreground);
    font-family: 'Oswald', sans-serif;
    display: block;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    font-weight: 400;
  }
  
  .modal-body .password-input {
    width: 100%;
    padding: 0.75rem;
    margin-bottom: 1.5rem;
    background-color: var(--color-background);
    border: 2px solid var(--color-background-muted);
    border-radius: var(--style-border-radius-inputs);
    color: var(--color-foreground);
    font-size: 1rem;
    box-sizing: border-box;
  }
  
  .password-input {
    width: 100%;
    padding: 0.75rem;
    margin-bottom: 1rem;
    background-color: var(--color-background-ui);
    border: 2px solid var(--color-background-muted);
    border-radius: var(--style-border-radius-inputs);
    color: var(--color-foreground);
    font-size: 1rem;
    box-sizing: border-box;
  }
  
  .modal-body .password-input:focus,
  .password-input:focus {
    outline: none;
    border-color: var(--color-accent-red);
  }
  
  .modal-body .password-submit,
  .password-submit {
    width: 100%;
    padding: 0.75rem 1.5rem;
    background-color: var(--color-accent-red);
    color: var(--color-foreground);
    font-family: 'Oswald', sans-serif;
    border: none;
    border-radius: var(--style-border-radius-inputs);
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.2s ease;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    font-weight: 500;
  }
  
  .modal-body .password-submit:hover,
  .password-submit:hover {
    background-color: #b91e2e;
  }
  
  /* Ornamental Borders */
  .ornamental-borders {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
  }
  
  .border-top, .border-bottom {
    position: absolute;
    width: 100%;
    height: 3px;
    left: 0;
  }
  
  .border-top {
    top: 40px;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba(225, 225, 230, 0.1) 20%, 
      rgba(215, 38, 56, 0.15) 50%, 
      rgba(225, 225, 230, 0.1) 80%, 
      transparent 100%);
    animation: borderPulse 8s ease-in-out infinite;
  }
  
  .border-bottom {
    bottom: 40px;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba(225, 225, 230, 0.08) 25%, 
      rgba(215, 38, 56, 0.12) 50%, 
      rgba(225, 225, 230, 0.08) 75%, 
      transparent 100%);
    animation: borderPulse 8s ease-in-out infinite 4s;
  }
  
  .border-left, .border-right {
    position: absolute;
    width: 2px;
    height: 100%;
    top: 0;
  }
  
  .border-left {
    left: 30px;
    background: linear-gradient(180deg, 
      transparent 0%, 
      rgba(225, 225, 230, 0.06) 30%, 
      rgba(215, 38, 56, 0.1) 50%, 
      rgba(225, 225, 230, 0.06) 70%, 
      transparent 100%);
    animation: borderVerticalPulse 10s ease-in-out infinite;
  }
  
  .border-right {
    right: 30px;
    background: linear-gradient(180deg, 
      transparent 0%, 
      rgba(225, 225, 230, 0.06) 25%, 
      rgba(215, 38, 56, 0.1) 50%, 
      rgba(225, 225, 230, 0.06) 75%, 
      transparent 100%);
    animation: borderVerticalPulse 10s ease-in-out infinite 5s;
  }
  
  /* Texture Overlays */
  .texture-overlays {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
  }
  
  .texture-noise {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      radial-gradient(circle at 20% 30%, rgba(225, 225, 230, 0.02) 1px, transparent 1px),
      radial-gradient(circle at 80% 70%, rgba(225, 225, 230, 0.015) 1px, transparent 1px),
      radial-gradient(circle at 40% 80%, rgba(215, 38, 56, 0.01) 1px, transparent 1px);
    background-size: 40px 40px, 60px 60px, 80px 80px;
    animation: textureShift 20s linear infinite;
    opacity: 0.3;
  }
  
  .texture-fabric {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      linear-gradient(45deg, rgba(225, 225, 230, 0.005) 25%, transparent 25%),
      linear-gradient(-45deg, rgba(225, 225, 230, 0.005) 25%, transparent 25%),
      linear-gradient(45deg, transparent 75%, rgba(215, 38, 56, 0.008) 75%),
      linear-gradient(-45deg, transparent 75%, rgba(215, 38, 56, 0.008) 75%);
    background-size: 100px 100px, 100px 100px, 200px 200px, 200px 200px;
    background-position: 0 0, 0 50px, 50px 50px, 100px 0px;
    opacity: 0.2;
  }
  
  /* Gothic Arches */
  .gothic-arches {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
  }
  
  .arch {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 300px;
    height: 150px;
    border: 2px solid transparent;
    border-radius: 150px 150px 0 0;
    background: linear-gradient(transparent, transparent) padding-box,
                linear-gradient(90deg, 
                  transparent 0%, 
                  rgba(215, 38, 56, 0.1) 30%, 
                  rgba(215, 38, 56, 0.15) 50%, 
                  rgba(215, 38, 56, 0.1) 70%, 
                  transparent 100%) border-box;
  }
  
  .arch-top {
    top: 10%;
    animation: archPulse 12s ease-in-out infinite;
  }
  
  .arch-bottom {
    bottom: 10%;
    transform: translateX(-50%) rotate(180deg);
    animation: archPulse 12s ease-in-out infinite 6s;
  }

  /* Particle Effects */
  .particles {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1;
  }
  
  .particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: var(--color-foreground);
    border-radius: 50%;
    opacity: 0.1;
  }
  
  .particle:nth-child(1) { left: 10%; animation: float-particle 20s linear infinite; animation-delay: 0s; }
  .particle:nth-child(2) { left: 20%; animation: float-particle 25s linear infinite; animation-delay: 2s; }
  .particle:nth-child(3) { left: 30%; animation: float-particle 18s linear infinite; animation-delay: 4s; }
  .particle:nth-child(4) { left: 40%; animation: float-particle 22s linear infinite; animation-delay: 6s; }
  .particle:nth-child(5) { left: 50%; animation: float-particle 28s linear infinite; animation-delay: 8s; }
  .particle:nth-child(6) { left: 60%; animation: float-particle 24s linear infinite; animation-delay: 10s; }
  .particle:nth-child(7) { left: 70%; animation: float-particle 26s linear infinite; animation-delay: 12s; }
  .particle:nth-child(8) { left: 80%; animation: float-particle 19s linear infinite; animation-delay: 14s; }
  .particle:nth-child(9) { left: 90%; animation: float-particle 21s linear infinite; animation-delay: 16s; }
  .particle:nth-child(10) { left: 15%; animation: float-particle 23s linear infinite; animation-delay: 18s; }
  
  /* Keyframe Animations */
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-20px); }
  }
  
  @keyframes pulse {
    0%, 100% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.05); opacity: 0.8; }
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 0.7;
      transform: translateY(0);
    }
  }
  
  @keyframes float-particle {
    0% {
      transform: translateY(100vh) translateX(0px);
      opacity: 0;
    }
    10% {
      opacity: 0.1;
    }
    90% {
      opacity: 0.1;
    }
    100% {
      transform: translateY(-100px) translateX(50px);
      opacity: 0;
    }
  }
  
  @keyframes borderPulse {
    0%, 100% {
      opacity: 0.3;
      transform: scaleX(1);
    }
    50% {
      opacity: 0.6;
      transform: scaleX(1.02);
    }
  }
  
  @keyframes borderVerticalPulse {
    0%, 100% {
      opacity: 0.2;
      transform: scaleY(1);
    }
    50% {
      opacity: 0.5;
      transform: scaleY(1.01);
    }
  }
  
  @keyframes textureShift {
    0% {
      background-position: 0px 0px, 0px 0px, 0px 0px;
    }
    100% {
      background-position: 40px 40px, -60px 60px, 80px -80px;
    }
  }
  
  @keyframes archPulse {
    0%, 100% {
      opacity: 0.3;
      transform: translateX(-50%) scale(1);
    }
    50% {
      opacity: 0.6;
      transform: translateX(-50%) scale(1.02);
    }
  }
  
  /* Responsive Design */
  @media (max-width: 768px) {
    .login-button-container {
      top: 1rem;
      right: 1rem;
    }
    
    .login-button {
      width: 40px;
      height: 40px;
    }
    
    .password-content {
      padding: 1rem;
      gap: 1.5rem;
      grid-template-rows: auto auto 1fr;
    }
    
    .countdown-timer {
      gap: 1rem;
    }
    
    .timer-number {
      font-size: 2rem;
    }
    
    .timer-unit {
      min-width: 60px;
    }
    
    .subtitle {
      font-size: 1.25rem;
    }
    
    .modal-content {
      width: 95%;
      margin: 1rem;
    }
    
    /* Responsive Ornamental Elements */
    .border-left {
      left: 15px;
    }
    
    .border-right {
      right: 15px;
    }
    
    .arch {
      width: 250px;
      height: 125px;
    }
  }
  
  @media (max-width: 480px) {
    .login-button {
      width: 36px;
      height: 36px;
    }
    
    .login-button svg {
      width: 16px;
      height: 16px;
    }
    
    .password-content {
      padding: 1rem;
      gap: 1rem;
    }
    .countdown-timer {
      gap: 0.5rem;
    }
    
    .timer-number {
      font-size: 1.5rem;
    }
    
    .timer-unit {
      min-width: 50px;
    }
    
    .timer-label {
      font-size: 0.75rem;
    }
    
    .modal-header {
      padding: 1rem 1rem 0;
    }
    
    .modal-body {
      padding: 0 1rem 1rem;
    }
    
    /* Mobile Ornamental Adjustments */
    .border-left {
      left: 10px;
    }
    
    .border-right {
      right: 10px;
    }
    
    .arch {
      width: 200px;
      height: 100px;
    }
    
    .border-top {
      top: 20px;
    }
    
    .border-bottom {
      bottom: 20px;
    }
  }
{% endstylesheet %}

{% schema %}
{
  "name": "t:general.password",
  "settings": [
    {
      "type": "image_picker",
      "id": "preloader_image",
      "label": "Preloader Image"
    },
    {
      "type": "range",
      "id": "preloader_size",
      "min": 50,
      "max": 200,
      "step": 10,
      "unit": "px",
      "label": "Preloader Size",
      "default": 100
    },
    {
      "type": "checkbox",
      "id": "enable_preloader",
      "label": "Enable Image Preloader",
      "default": true
    },
    {
      "type": "color",
      "id": "preloader_background",
      "label": "Preloader Background Color",
      "default": "#0E0E10"
    },
    {
      "type": "header",
      "content": "Page Content"
    },
    {
      "type": "image_picker",
      "id": "logo_image",
      "label": "Logo Image"
    },
    {
      "type": "range",
      "id": "logo_size",
      "min": 100,
      "max": 400,
      "step": 20,
      "unit": "px",
      "label": "Logo Size",
      "default": 200
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Brand Subtitle",
      "default": "Something exciting is coming soon"
    },
    {
      "type": "header",
      "content": "Countdown Timer"
    },
    {
      "type": "text",
      "id": "launch_date",
      "label": "Launch Date (YYYY-MM-DD)",
      "default": "2024-12-31",
      "info": "Format: YYYY-MM-DD (e.g., 2024-12-31)"
    },
    {
      "type": "checkbox",
      "id": "show_timer",
      "label": "Show Countdown Timer",
      "default": true
    }
  ]
}
{% endschema %}
